l0000: 20 00 00 00000004	A = [4](ARCH)
l0001: 15 02 00 40000003	IF ARCH == I386: 4
l0002: 15 04 00 c000003e	IF ARCH == X86_64: 7
l0003: 05 00 00 0000000a	goto l14
l0004: 20 00 00 00000000	A = [0](SYSCALL)
l0005: 25 07 00 000001c0	IF SYSCALL > 0x01c0: 13
l0006: 05 00 00 00000007	goto l14
l0007: 20 00 00 00000000	A = [0](SYSCALL)
l0008: 45 01 00 40000000	jset #0x40000000, l10
l0009: 25 03 01 000001c0	IF SYSCALL > 0x01c0: 13 else 11
l0010: 25 02 00 40000223	IF SYSCALL > 0x40000223: 13
l0011: 05 00 00 00000002	goto l14
l0012: 05 00 00 00000001	goto l14
l0013: 06 00 00 00050026	RETURN ERRORNO(38)
l0014: 20 00 00 00000004	A = [4](ARCH)
l0015: 15 01 00 c000003e	IF ARCH == X86_64: 17
l0016: 05 00 00 000002f3	goto l772
l0017: 20 00 00 00000000	A = [0](SYSCALL)
l0018: 25 01 00 00000049	IF SYSCALL > 0x0049: 20
l0019: 05 00 00 0000028c	goto l672
l0020: 25 01 00 40000027	IF SYSCALL > 0x40000027: 22
l0021: 05 00 00 00000145	goto l347
l0022: 25 00 a1 400000d5	IF SYSCALL <= 213: <= 111: <= 77: <= 61: <= 50: <= 43: == x32.accept: ALLOW
l0023: 25 00 50 4000012f	IF SYSCALL <= 303: <= 260: <= 233: <= 224: <= 219: == x32.restart_syscall: ALLOW
l0024: 25 00 27 40000201	IF SYSCALL <= 513: <= 332: <= 318: <= 314: == x32.sched_setattr: ALLOW
l0025: 25 00 13 40000212	IF SYSCALL <= 530: <= 521: <= 517: == x32.recvfrom: ALLOW
l0026: 25 00 09 4000021b	IF SYSCALL <= 539: <= 535: == x32.pwritev: ALLOW
l0027: 25 00 04 4000021f	IF SYSCALL <= 543: == 0x4000021f: ALLOW
l0028: 15 a5 00 40000223	IF SYSCALL == 0x40000223: ALLOW
l0029: 15 a4 00 40000222	IF SYSCALL == 0x40000222: ALLOW
l0030: 15 a3 00 40000221	IF SYSCALL == 0x40000221: ALLOW
l0031: 15 a2 97 40000220	IF SYSCALL == 0x40000220 then ALLOW else ERRORNO(1)
l0032: 15 a1 00 4000021f	IF SYSCALL == 0x4000021f: ALLOW
l0033: 15 a0 00 4000021e	IF SYSCALL == x32.getsockopt: ALLOW
l0034: 15 9f 00 4000021d	IF SYSCALL == x32.setsockopt: ALLOW
l0035: 15 9e 93 4000021c	IF SYSCALL == x32.process_vm_writev then ALLOW else ERRORNO(1)
l0036: 25 00 04 40000217	IF SYSCALL <= 535: == x32.pwritev: ALLOW
l0037: 15 9c 00 4000021b	IF SYSCALL == x32.process_vm_readv: ALLOW
l0038: 15 9b 00 4000021a	IF SYSCALL == x32.sendmmsg: ALLOW
l0039: 15 9a 00 40000219	IF SYSCALL == x32.recvmmsg: ALLOW
l0040: 15 99 8e 40000218	IF SYSCALL == x32.rt_tgsigqueueinfo then ALLOW else ERRORNO(1)
l0041: 15 98 00 40000217	IF SYSCALL == x32.pwritev: ALLOW
l0042: 15 97 00 40000216	IF SYSCALL == x32.preadv: ALLOW
l0043: 15 96 00 40000214	IF SYSCALL == x32.vmsplice: ALLOW
l0044: 15 95 8a 40000213	IF SYSCALL == x32.get_robust_list then ALLOW else ERRORNO(1)
l0045: 25 00 09 40000209	IF SYSCALL <= 521: <= 517: == x32.recvfrom: ALLOW
l0046: 25 00 04 4000020d	IF SYSCALL <= 525: == x32.sigaltstack: ALLOW
l0047: 15 92 00 40000212	IF SYSCALL == x32.set_robust_list: ALLOW
l0048: 15 91 00 40000211	IF SYSCALL == x32.waitid: ALLOW
l0049: 15 90 00 4000020f	IF SYSCALL == x32.mq_notify: ALLOW
l0050: 15 8f 84 4000020e	IF SYSCALL == x32.timer_create then ALLOW else ERRORNO(1)
l0051: 15 8e 00 4000020d	IF SYSCALL == x32.sigaltstack: ALLOW
l0052: 15 8d 00 4000020c	IF SYSCALL == x32.rt_sigqueueinfo: ALLOW
l0053: 15 8c 00 4000020b	IF SYSCALL == x32.rt_sigtimedwait: ALLOW
l0054: 15 8b 80 4000020a	IF SYSCALL == x32.rt_sigpending then ALLOW else ERRORNO(1)
l0055: 25 00 04 40000205	IF SYSCALL <= 517: == x32.recvfrom: ALLOW
l0056: 15 89 00 40000209	IF SYSCALL == x32.ptrace: ALLOW
l0057: 15 88 00 40000208	IF SYSCALL == x32.execve: ALLOW
l0058: 15 87 00 40000207	IF SYSCALL == x32.recvmsg: ALLOW
l0059: 15 86 7b 40000206	IF SYSCALL == x32.sendmsg then ALLOW else ERRORNO(1)
l0060: 15 85 00 40000205	IF SYSCALL == x32.recvfrom: ALLOW
l0061: 15 84 00 40000204	IF SYSCALL == x32.writev: ALLOW
l0062: 15 83 00 40000203	IF SYSCALL == x32.readv: ALLOW
l0063: 15 82 77 40000202	IF SYSCALL == x32.ioctl then ALLOW else ERRORNO(1)
l0064: 25 00 14 4000014c	IF SYSCALL <= 332: <= 318: <= 314: == x32.sched_setattr: ALLOW
l0065: 25 00 09 400001b7	IF SYSCALL <= 439: <= 434: == x32.pidfd_open: ALLOW
l0066: 25 00 04 400001be	IF SYSCALL <= 446: == x32.landlock_restrict_self: ALLOW
l0067: 15 7e 00 40000201	IF SYSCALL == x32.rt_sigreturn: ALLOW
l0068: 15 7d 00 40000200	IF SYSCALL == x32.rt_sigaction: ALLOW
l0069: 15 7c 00 400001c0	IF SYSCALL == x32.process_mrelease: ALLOW
l0070: 15 7b 70 400001bf	IF SYSCALL == x32.memfd_secret then ALLOW else ERRORNO(1)
l0071: 15 7a 00 400001be	IF SYSCALL == x32.landlock_restrict_self: ALLOW
l0072: 15 79 00 400001bd	IF SYSCALL == x32.landlock_add_rule: ALLOW
l0073: 15 78 00 400001bc	IF SYSCALL == x32.landlock_create_ruleset: ALLOW
l0074: 15 77 6c 400001b9	IF SYSCALL == x32.epoll_pwait2 then ALLOW else ERRORNO(1)
l0075: 25 00 05 400001b2	IF SYSCALL <= 434: == x32.pidfd_open: ALLOW
l0076: 15 75 00 400001b7	IF SYSCALL == x32.faccessat2: ALLOW
l0077: 15 74 00 400001b5	IF SYSCALL == x32.openat2: ALLOW
l0078: 15 73 00 400001b4	IF SYSCALL == x32.close_range: ALLOW
l0079: 15 00 67 400001b3	IF SYSCALL != x32.clone3: ERRORNO(1)(l0183)
l0080: 06 00 00 00050026	RETURN ERRORNO(38)
l0081: 15 70 00 400001b2	IF SYSCALL == x32.pidfd_open: ALLOW
l0082: 15 6f 00 400001a8	IF SYSCALL == x32.pidfd_send_signal: ALLOW
l0083: 15 6e 00 4000014e	IF SYSCALL == x32.rseq: ALLOW
l0084: 15 6d 62 4000014d	IF SYSCALL == x32.io_pgetevents then ALLOW else ERRORNO(1)
l0085: 25 00 09 4000013e	IF SYSCALL <= 318: <= 314: == x32.sched_setattr: ALLOW
l0086: 25 00 04 40000146	IF SYSCALL <= 326: == x32.copy_file_range: ALLOW
l0087: 15 6a 00 4000014c	IF SYSCALL == x32.statx: ALLOW
l0088: 15 69 00 4000014b	IF SYSCALL == x32.pkey_free: ALLOW
l0089: 15 68 00 4000014a	IF SYSCALL == x32.pkey_alloc: ALLOW
l0090: 15 67 5c 40000149	IF SYSCALL == x32.pkey_mprotect then ALLOW else ERRORNO(1)
l0091: 15 66 00 40000146	IF SYSCALL == x32.copy_file_range: ALLOW
l0092: 15 65 00 40000145	IF SYSCALL == x32.mlock2: ALLOW
l0093: 15 64 00 40000144	IF SYSCALL == x32.membarrier: ALLOW
l0094: 15 63 58 4000013f	IF SYSCALL == x32.memfd_create then ALLOW else ERRORNO(1)
l0095: 25 00 04 4000013a	IF SYSCALL <= 314: == x32.sched_setattr: ALLOW
l0096: 15 61 00 4000013e	IF SYSCALL == x32.getrandom: ALLOW
l0097: 15 60 00 4000013d	IF SYSCALL == x32.seccomp: ALLOW
l0098: 15 5f 00 4000013c	IF SYSCALL == x32.renameat2: ALLOW
l0099: 15 5e 53 4000013b	IF SYSCALL == x32.sched_getattr then ALLOW else ERRORNO(1)
l0100: 15 5d 00 4000013a	IF SYSCALL == x32.sched_setattr: ALLOW
l0101: 15 5c 00 40000135	IF SYSCALL == x32.getcpu: ALLOW
l0102: 15 5b 00 40000132	IF SYSCALL == x32.syncfs: ALLOW
l0103: 15 5a 4f 40000131	IF SYSCALL == x32.clock_adjtime then ALLOW else ERRORNO(1)
l0104: 25 00 27 40000104	IF SYSCALL <= 260: <= 233: <= 224: <= 219: == x32.restart_syscall: ALLOW
l0105: 25 00 13 40000119	IF SYSCALL <= 281: <= 268: <= 264: == x32.renameat: ALLOW
l0106: 25 00 09 40000121	IF SYSCALL <= 289: <= 285: == x32.fallocate: ALLOW
l0107: 25 00 04 40000125	IF SYSCALL <= 293: == x32.pipe2: ALLOW
l0108: 15 55 00 4000012f	IF SYSCALL == x32.name_to_handle_at: ALLOW
l0109: 15 54 00 4000012e	IF SYSCALL == x32.prlimit64: ALLOW
l0110: 15 53 00 4000012d	IF SYSCALL == x32.fanotify_mark: ALLOW
l0111: 15 52 47 40000126	IF SYSCALL == x32.inotify_init1 then ALLOW else ERRORNO(1)
l0112: 15 51 00 40000125	IF SYSCALL == x32.pipe2: ALLOW
l0113: 15 50 00 40000124	IF SYSCALL == x32.dup3: ALLOW
l0114: 15 4f 00 40000123	IF SYSCALL == x32.epoll_create1: ALLOW
l0115: 15 4e 43 40000122	IF SYSCALL == x32.eventfd2 then ALLOW else ERRORNO(1)
l0116: 25 00 04 4000011d	IF SYSCALL <= 285: == x32.fallocate: ALLOW
l0117: 15 4c 00 40000121	IF SYSCALL == x32.signalfd4: ALLOW
l0118: 15 4b 00 40000120	IF SYSCALL == x32.accept4: ALLOW
l0119: 15 4a 00 4000011f	IF SYSCALL == x32.timerfd_gettime: ALLOW
l0120: 15 49 3e 4000011e	IF SYSCALL == x32.timerfd_settime then ALLOW else ERRORNO(1)
l0121: 15 48 00 4000011d	IF SYSCALL == x32.fallocate: ALLOW
l0122: 15 47 00 4000011c	IF SYSCALL == x32.eventfd: ALLOW
l0123: 15 46 00 4000011b	IF SYSCALL == x32.timerfd_create: ALLOW
l0124: 15 45 3a 4000011a	IF SYSCALL == x32.signalfd then ALLOW else ERRORNO(1)
l0125: 25 00 09 4000010c	IF SYSCALL <= 268: <= 264: == x32.renameat: ALLOW
l0126: 25 00 04 40000113	IF SYSCALL <= 275: == x32.splice: ALLOW
l0127: 15 42 00 40000119	IF SYSCALL == x32.epoll_pwait: ALLOW
l0128: 15 41 00 40000118	IF SYSCALL == x32.utimensat: ALLOW
l0129: 15 40 00 40000115	IF SYSCALL == x32.sync_file_range: ALLOW
l0130: 15 3f 34 40000114	IF SYSCALL == x32.tee then ALLOW else ERRORNO(1)
l0131: 15 3e 00 40000113	IF SYSCALL == x32.splice: ALLOW
l0132: 15 3d 00 4000010f	IF SYSCALL == x32.ppoll: ALLOW
l0133: 15 3c 00 4000010e	IF SYSCALL == x32.pselect6: ALLOW
l0134: 15 3b 30 4000010d	IF SYSCALL == x32.faccessat then ALLOW else ERRORNO(1)
l0135: 25 00 04 40000108	IF SYSCALL <= 264: == x32.renameat: ALLOW
l0136: 15 39 00 4000010c	IF SYSCALL == x32.fchmodat: ALLOW
l0137: 15 38 00 4000010b	IF SYSCALL == x32.readlinkat: ALLOW
l0138: 15 37 00 4000010a	IF SYSCALL == x32.symlinkat: ALLOW
l0139: 15 36 2b 40000109	IF SYSCALL == x32.linkat then ALLOW else ERRORNO(1)
l0140: 15 35 00 40000108	IF SYSCALL == x32.renameat: ALLOW
l0141: 15 34 00 40000107	IF SYSCALL == x32.unlinkat: ALLOW
l0142: 15 33 00 40000106	IF SYSCALL == x32.newfstatat: ALLOW
l0143: 15 32 27 40000105	IF SYSCALL == x32.futimesat then ALLOW else ERRORNO(1)
l0144: 25 00 13 400000e9	IF SYSCALL <= 233: <= 224: <= 219: == x32.restart_syscall: ALLOW
l0145: 25 00 09 400000fb	IF SYSCALL <= 251: <= 241: == x32.mq_unlink: ALLOW
l0146: 25 00 04 400000ff	IF SYSCALL <= 255: == x32.inotify_rm_watch: ALLOW
l0147: 15 2e 00 40000104	IF SYSCALL == x32.fchownat: ALLOW
l0148: 15 2d 00 40000103	IF SYSCALL == x32.mknodat: ALLOW
l0149: 15 2c 00 40000102	IF SYSCALL == x32.mkdirat: ALLOW
l0150: 15 2b 20 40000101	IF SYSCALL == x32.openat then ALLOW else ERRORNO(1)
l0151: 15 2a 00 400000ff	IF SYSCALL == x32.inotify_rm_watch: ALLOW
l0152: 15 29 00 400000fe	IF SYSCALL == x32.inotify_add_watch: ALLOW
l0153: 15 28 00 400000fd	IF SYSCALL == x32.inotify_init: ALLOW
l0154: 15 27 1c 400000fc	IF SYSCALL == x32.ioprio_get then ALLOW else ERRORNO(1)
l0155: 25 00 04 400000f1	IF SYSCALL <= 241: == x32.mq_unlink: ALLOW
l0156: 15 25 00 400000fb	IF SYSCALL == x32.ioprio_set: ALLOW
l0157: 15 24 00 400000f5	IF SYSCALL == x32.mq_getsetattr: ALLOW
l0158: 15 23 00 400000f3	IF SYSCALL == x32.mq_timedreceive: ALLOW
l0159: 15 22 17 400000f2	IF SYSCALL == x32.mq_timedsend then ALLOW else ERRORNO(1)
l0160: 15 21 00 400000f1	IF SYSCALL == x32.mq_unlink: ALLOW
l0161: 15 20 00 400000f0	IF SYSCALL == x32.mq_open: ALLOW
l0162: 15 1f 00 400000eb	IF SYSCALL == x32.utimes: ALLOW
l0163: 15 1e 13 400000ea	IF SYSCALL == x32.tgkill then ALLOW else ERRORNO(1)
l0164: 25 00 09 400000e0	IF SYSCALL <= 224: <= 219: == x32.restart_syscall: ALLOW
l0165: 25 00 04 400000e5	IF SYSCALL <= 229: == x32.clock_getres: ALLOW
l0166: 15 1b 00 400000e9	IF SYSCALL == x32.epoll_ctl: ALLOW
l0167: 15 1a 00 400000e8	IF SYSCALL == x32.epoll_wait: ALLOW
l0168: 15 19 00 400000e7	IF SYSCALL == x32.exit_group: ALLOW
l0169: 15 18 0d 400000e6	IF SYSCALL == x32.clock_nanosleep then ALLOW else ERRORNO(1)
l0170: 15 17 00 400000e5	IF SYSCALL == x32.clock_getres: ALLOW
l0171: 15 16 00 400000e4	IF SYSCALL == x32.clock_gettime: ALLOW
l0172: 15 15 00 400000e2	IF SYSCALL == x32.timer_delete: ALLOW
l0173: 15 14 09 400000e1	IF SYSCALL == x32.timer_getoverrun then ALLOW else ERRORNO(1)
l0174: 25 00 04 400000db	IF SYSCALL <= 219: == x32.restart_syscall: ALLOW
l0175: 15 12 00 400000e0	IF SYSCALL == x32.timer_gettime: ALLOW
l0176: 15 11 00 400000df	IF SYSCALL == x32.timer_settime: ALLOW
l0177: 15 10 00 400000dd	IF SYSCALL == x32.fadvise64: ALLOW
l0178: 15 0f 04 400000dc	IF SYSCALL == x32.semtimedop then ALLOW else ERRORNO(1)
l0179: 15 0e 00 400000db	IF SYSCALL == x32.restart_syscall: ALLOW
l0180: 15 0d 00 400000da	IF SYSCALL == x32.set_tid_address: ALLOW
l0181: 15 0c 00 400000d9	IF SYSCALL == x32.getdents64: ALLOW
l0182: 15 0b 00 400000d8	IF SYSCALL == x32.remap_file_pages: ALLOW
l0183: 06 00 00 00050001	RETURN ERRORNO(1)
l0184: 25 00 51 4000006f	IF SYSCALL <= 111: <= 77: <= 61: <= 50: <= 43: == x32.accept: ALLOW
l0185: 25 00 28 40000096	IF SYSCALL <= 150: <= 130: <= 119: <= 115: == x32.getgroups: ALLOW
l0186: 25 00 14 400000c0	IF SYSCALL <= 192: <= 161: <= 157: == x32.prctl: ALLOW
l0187: 25 00 0a 400000c8	IF SYSCALL <= 200: <= 196: == x32.flistxattr: ALLOW
l0188: 25 00 04 400000cc	IF SYSCALL <= 204: != x32.sched_getaffinity: == x32.sched_setaffinity: ALLOW(l0195)
l0189: 15 04 00 400000d5	IF SYSCALL == x32.epoll_create: ALLOW
l0190: 15 03 00 400000d2	IF SYSCALL == x32.io_cancel: ALLOW
l0191: 15 02 00 400000d0	IF SYSCALL == x32.io_getevents: ALLOW
l0192: 15 01 fd 400000cf	IF SYSCALL == x32.io_destroy then ALLOW else ERRORNO(1)
l0193: 15 00 01 400000cc	IF SYSCALL != x32.sched_getaffinity: == x32.sched_setaffinity: ALLOW(l0195)
l0194: 06 00 00 7fff0000	RETURN ALLOW
l0195: 15 ff 00 400000cb	IF SYSCALL == x32.sched_setaffinity: ALLOW
l0196: 15 fe 00 400000ca	IF SYSCALL == x32.futex: ALLOW
l0197: 15 fd f8 400000c9	IF SYSCALL == x32.time then ALLOW else ERRORNO(1)
l0198: 25 00 04 400000c4	IF SYSCALL <= 196: == x32.flistxattr: ALLOW
l0199: 15 fb 00 400000c8	IF SYSCALL == x32.tkill: ALLOW
l0200: 15 fa 00 400000c7	IF SYSCALL == x32.fremovexattr: ALLOW
l0201: 15 f9 00 400000c6	IF SYSCALL == x32.lremovexattr: ALLOW
l0202: 15 f8 f3 400000c5	IF SYSCALL == x32.removexattr then ALLOW else ERRORNO(1)
l0203: 15 f7 00 400000c4	IF SYSCALL == x32.flistxattr: ALLOW
l0204: 15 f6 00 400000c3	IF SYSCALL == x32.llistxattr: ALLOW
l0205: 15 f5 00 400000c2	IF SYSCALL == x32.listxattr: ALLOW
l0206: 15 f4 ef 400000c1	IF SYSCALL == x32.fgetxattr then ALLOW else ERRORNO(1)
l0207: 25 00 09 400000a1	IF SYSCALL <= 161: <= 157: == x32.prctl: ALLOW
l0208: 25 00 04 400000bc	IF SYSCALL <= 188: == x32.setxattr: ALLOW
l0209: 15 f1 00 400000c0	IF SYSCALL == x32.lgetxattr: ALLOW
l0210: 15 f0 00 400000bf	IF SYSCALL == x32.getxattr: ALLOW
l0211: 15 ef 00 400000be	IF SYSCALL == x32.fsetxattr: ALLOW
l0212: 15 ee e9 400000bd	IF SYSCALL == x32.lsetxattr then ALLOW else ERRORNO(1)
l0213: 15 ed 00 400000bc	IF SYSCALL == x32.setxattr: ALLOW
l0214: 15 ec 00 400000bb	IF SYSCALL == x32.readahead: ALLOW
l0215: 15 eb 00 400000ba	IF SYSCALL == x32.gettid: ALLOW
l0216: 15 ea e5 400000a2	IF SYSCALL == x32.sync then ALLOW else ERRORNO(1)
l0217: 25 00 04 4000009d	IF SYSCALL <= 157: == x32.prctl: ALLOW
l0218: 15 e8 00 400000a1	IF SYSCALL == x32.chroot: ALLOW
l0219: 15 e7 00 400000a0	IF SYSCALL == x32.setrlimit: ALLOW
l0220: 15 e6 00 4000009f	IF SYSCALL == x32.adjtimex: ALLOW
l0221: 15 e5 e0 4000009e	IF SYSCALL == x32.arch_prctl then ALLOW else ERRORNO(1)
l0222: 15 e4 00 4000009d	IF SYSCALL == x32.prctl: ALLOW
l0223: 15 e3 00 4000009a	IF SYSCALL == x32.modify_ldt: ALLOW
l0224: 15 e2 00 40000098	IF SYSCALL == x32.munlockall: ALLOW
l0225: 15 e1 dc 40000097	IF SYSCALL == x32.mlockall then ALLOW else ERRORNO(1)
l0226: 25 00 14 40000082	IF SYSCALL <= 130: <= 119: <= 115: == x32.getgroups: ALLOW
l0227: 25 00 09 4000008e	IF SYSCALL <= 142: <= 137: == x32.statfs: ALLOW
l0228: 25 00 04 40000092	IF SYSCALL <= 146: == x32.sched_get_priority_max: ALLOW
l0229: 15 dd 00 40000096	IF SYSCALL == x32.munlock: ALLOW
l0230: 15 dc 00 40000095	IF SYSCALL == x32.mlock: ALLOW
l0231: 15 db 00 40000094	IF SYSCALL == x32.sched_rr_get_interval: ALLOW
l0232: 15 da d5 40000093	IF SYSCALL == x32.sched_get_priority_min then ALLOW else ERRORNO(1)
l0233: 15 d9 00 40000092	IF SYSCALL == x32.sched_get_priority_max: ALLOW
l0234: 15 d8 00 40000091	IF SYSCALL == x32.sched_getscheduler: ALLOW
l0235: 15 d7 00 40000090	IF SYSCALL == x32.sched_setscheduler: ALLOW
l0236: 15 d6 d1 4000008f	IF SYSCALL == x32.sched_getparam then ALLOW else ERRORNO(1)
l0237: 25 00 04 40000089	IF SYSCALL <= 137: == x32.statfs: ALLOW
l0238: 15 d4 00 4000008e	IF SYSCALL == x32.sched_setparam: ALLOW
l0239: 15 d3 00 4000008d	IF SYSCALL == x32.setpriority: ALLOW
l0240: 15 d2 00 4000008c	IF SYSCALL == x32.getpriority: ALLOW
l0241: 15 d1 cc 4000008a	IF SYSCALL == x32.fstatfs then ALLOW else ERRORNO(1)
l0242: 15 d0 00 40000089	IF SYSCALL == x32.statfs: ALLOW
l0243: 15 00 01 40000087	IF SYSCALL != x32.personality: == x32.mknod: ALLOW(l0245)
l0244: 05 00 00 00000360	goto l1109
l0245: 15 cd 00 40000085	IF SYSCALL == x32.mknod: ALLOW
l0246: 15 cc c7 40000084	IF SYSCALL == x32.utime then ALLOW else ERRORNO(1)
l0247: 25 00 09 40000077	IF SYSCALL <= 119: <= 115: == x32.getgroups: ALLOW
l0248: 25 00 04 4000007b	IF SYSCALL <= 123: == x32.setfsgid: ALLOW
l0249: 15 c9 00 40000082	IF SYSCALL == x32.rt_sigsuspend: ALLOW
l0250: 15 c8 00 4000007e	IF SYSCALL == x32.capset: ALLOW
l0251: 15 c7 00 4000007d	IF SYSCALL == x32.capget: ALLOW
l0252: 15 c6 c1 4000007c	IF SYSCALL == x32.getsid then ALLOW else ERRORNO(1)
l0253: 15 c5 00 4000007b	IF SYSCALL == x32.setfsgid: ALLOW
l0254: 15 c4 00 4000007a	IF SYSCALL == x32.setfsuid: ALLOW
l0255: 15 c3 00 40000079	IF SYSCALL == x32.getpgid: ALLOW
l0256: 15 c2 bd 40000078	IF SYSCALL == x32.getresgid then ALLOW else ERRORNO(1)
l0257: 25 00 04 40000073	IF SYSCALL <= 115: == x32.getgroups: ALLOW
l0258: 15 c0 00 40000077	IF SYSCALL == x32.setresgid: ALLOW
l0259: 15 bf 00 40000076	IF SYSCALL == x32.getresuid: ALLOW
l0260: 15 be 00 40000075	IF SYSCALL == x32.setresuid: ALLOW
l0261: 15 bd b8 40000074	IF SYSCALL == x32.setgroups then ALLOW else ERRORNO(1)
l0262: 15 bc 00 40000073	IF SYSCALL == x32.getgroups: ALLOW
l0263: 15 bb 00 40000072	IF SYSCALL == x32.setregid: ALLOW
l0264: 15 ba 00 40000071	IF SYSCALL == x32.setreuid: ALLOW
l0265: 15 b9 b4 40000070	IF SYSCALL == x32.setsid then ALLOW else ERRORNO(1)
l0266: 25 00 27 4000004d	IF SYSCALL <= 77: <= 61: <= 50: <= 43: == x32.accept: ALLOW
l0267: 25 00 13 4000005d	IF SYSCALL <= 93: <= 85: <= 81: == x32.fchdir: ALLOW
l0268: 25 00 09 40000066	IF SYSCALL <= 102: <= 97: == x32.getrlimit: ALLOW
l0269: 25 00 04 4000006b	IF SYSCALL <= 107: == x32.geteuid: ALLOW
l0270: 15 b4 00 4000006f	IF SYSCALL == x32.getpgrp: ALLOW
l0271: 15 b3 00 4000006e	IF SYSCALL == x32.getppid: ALLOW
l0272: 15 b2 00 4000006d	IF SYSCALL == x32.setpgid: ALLOW
l0273: 15 b1 ac 4000006c	IF SYSCALL == x32.getegid then ALLOW else ERRORNO(1)
l0274: 15 b0 00 4000006b	IF SYSCALL == x32.geteuid: ALLOW
l0275: 15 af 00 4000006a	IF SYSCALL == x32.setgid: ALLOW
l0276: 15 ae 00 40000069	IF SYSCALL == x32.setuid: ALLOW
l0277: 15 ad a8 40000068	IF SYSCALL == x32.getgid then ALLOW else ERRORNO(1)
l0278: 25 00 04 40000061	IF SYSCALL <= 97: == x32.getrlimit: ALLOW
l0279: 15 ab 00 40000066	IF SYSCALL == x32.getuid: ALLOW
l0280: 15 aa 00 40000064	IF SYSCALL == x32.times: ALLOW
l0281: 15 a9 00 40000063	IF SYSCALL == x32.sysinfo: ALLOW
l0282: 15 a8 a3 40000062	IF SYSCALL == x32.getrusage then ALLOW else ERRORNO(1)
l0283: 15 a7 00 40000061	IF SYSCALL == x32.getrlimit: ALLOW
l0284: 15 a6 00 40000060	IF SYSCALL == x32.gettimeofday: ALLOW
l0285: 15 a5 00 4000005f	IF SYSCALL == x32.umask: ALLOW
l0286: 15 a4 9f 4000005e	IF SYSCALL == x32.lchown then ALLOW else ERRORNO(1)
l0287: 25 00 09 40000055	IF SYSCALL <= 85: <= 81: == x32.fchdir: ALLOW
l0288: 25 00 04 40000059	IF SYSCALL <= 89: == x32.readlink: ALLOW
l0289: 15 a1 00 4000005d	IF SYSCALL == x32.fchown: ALLOW
l0290: 15 a0 00 4000005c	IF SYSCALL == x32.chown: ALLOW
l0291: 15 9f 00 4000005b	IF SYSCALL == x32.fchmod: ALLOW
l0292: 15 9e 99 4000005a	IF SYSCALL == x32.chmod then ALLOW else ERRORNO(1)
l0293: 15 9d 00 40000059	IF SYSCALL == x32.readlink: ALLOW
l0294: 15 9c 00 40000058	IF SYSCALL == x32.symlink: ALLOW
l0295: 15 9b 00 40000057	IF SYSCALL == x32.unlink: ALLOW
l0296: 15 9a 95 40000056	IF SYSCALL == x32.link then ALLOW else ERRORNO(1)
l0297: 25 00 04 40000051	IF SYSCALL <= 81: == x32.fchdir: ALLOW
l0298: 15 98 00 40000055	IF SYSCALL == x32.creat: ALLOW
l0299: 15 97 00 40000054	IF SYSCALL == x32.rmdir: ALLOW
l0300: 15 96 00 40000053	IF SYSCALL == x32.mkdir: ALLOW
l0301: 15 95 90 40000052	IF SYSCALL == x32.rename then ALLOW else ERRORNO(1)
l0302: 15 94 00 40000051	IF SYSCALL == x32.fchdir: ALLOW
l0303: 15 93 00 40000050	IF SYSCALL == x32.chdir: ALLOW
l0304: 15 92 00 4000004f	IF SYSCALL == x32.getcwd: ALLOW
l0305: 15 91 8c 4000004e	IF SYSCALL == x32.getdents then ALLOW else ERRORNO(1)
l0306: 25 00 13 4000003d	IF SYSCALL <= 61: <= 50: <= 43: == x32.accept: ALLOW
l0307: 25 00 09 40000045	IF SYSCALL <= 69: <= 65: == x32.semop: ALLOW
l0308: 25 00 04 40000049	IF SYSCALL <= 73: == x32.flock: ALLOW
l0309: 15 8d 00 4000004d	IF SYSCALL == x32.ftruncate: ALLOW
l0310: 15 8c 00 4000004c	IF SYSCALL == x32.truncate: ALLOW
l0311: 15 8b 00 4000004b	IF SYSCALL == x32.fdatasync: ALLOW
l0312: 15 8a 85 4000004a	IF SYSCALL == x32.fsync then ALLOW else ERRORNO(1)
l0313: 15 89 00 40000049	IF SYSCALL == x32.flock: ALLOW
l0314: 15 88 00 40000048	IF SYSCALL == x32.fcntl: ALLOW
l0315: 15 87 00 40000047	IF SYSCALL == x32.msgctl: ALLOW
l0316: 15 86 81 40000046	IF SYSCALL == x32.msgrcv then ALLOW else ERRORNO(1)
l0317: 25 00 04 40000041	IF SYSCALL <= 65: == x32.semop: ALLOW
l0318: 15 84 00 40000045	IF SYSCALL == x32.msgsnd: ALLOW
l0319: 15 83 00 40000044	IF SYSCALL == x32.msgget: ALLOW
l0320: 15 82 00 40000043	IF SYSCALL == x32.shmdt: ALLOW
l0321: 15 81 7c 40000042	IF SYSCALL == x32.semctl then ALLOW else ERRORNO(1)
l0322: 15 80 00 40000041	IF SYSCALL == x32.semop: ALLOW
l0323: 15 7f 00 40000040	IF SYSCALL == x32.semget: ALLOW
l0324: 15 7e 00 4000003f	IF SYSCALL == x32.uname: ALLOW
l0325: 15 7d 78 4000003e	IF SYSCALL == x32.kill then ALLOW else ERRORNO(1)
l0326: 25 00 0a 40000032	IF SYSCALL <= 50: <= 43: == x32.accept: ALLOW
l0327: 25 00 04 40000038	IF SYSCALL <= 56: != x32.clone: == x32.socketpair: ALLOW(l0334)
l0328: 15 7a 00 4000003d	IF SYSCALL == x32.wait4: ALLOW
l0329: 15 79 00 4000003c	IF SYSCALL == x32.exit: ALLOW
l0330: 15 78 00 4000003a	IF SYSCALL == x32.vfork: ALLOW
l0331: 15 77 72 40000039	IF SYSCALL == x32.fork then ALLOW else ERRORNO(1)
l0332: 15 00 01 40000038	IF SYSCALL != x32.clone: == x32.socketpair: ALLOW(l0334)
l0333: 05 00 00 00000316	goto l1124
l0334: 15 74 00 40000035	IF SYSCALL == x32.socketpair: ALLOW
l0335: 15 73 00 40000034	IF SYSCALL == x32.getpeername: ALLOW
l0336: 15 72 6d 40000033	IF SYSCALL == x32.getsockname then ALLOW else ERRORNO(1)
l0337: 25 00 04 4000002b	IF SYSCALL <= 43: == x32.accept: ALLOW
l0338: 15 70 00 40000032	IF SYSCALL == x32.listen: ALLOW
l0339: 15 6f 00 40000031	IF SYSCALL == x32.bind: ALLOW
l0340: 15 6e 00 40000030	IF SYSCALL == x32.shutdown: ALLOW
l0341: 15 6d 68 4000002c	IF SYSCALL == x32.sendto then ALLOW else ERRORNO(1)
l0342: 15 6c 00 4000002b	IF SYSCALL == x32.accept: ALLOW
l0343: 15 6b 00 4000002a	IF SYSCALL == x32.connect: ALLOW
l0344: 15 00 01 40000029	IF SYSCALL != x32.socket: == x32.sendfile then ALLOW else ERRORNO(1)(l0346)
l0345: 05 00 00 00000209	goto l867
l0346: 15 68 63 40000028	IF SYSCALL == x32.sendfile then ALLOW else ERRORNO(1)
l0347: 25 00 a2 000000e9	IF SYSCALL <= 233: <= 141: <= 106: <= 89: <= 81: <= 77: == ftruncate: ALLOW
l0348: 25 00 50 0000013a	IF SYSCALL <= 314: <= 275: <= 258: <= 245: <= 241: == mq_unlink: ALLOW
l0349: 25 00 27 40000002	IF SYSCALL <= 2: <= 333: <= 325: <= 318: == getrandom: ALLOW
l0350: 25 00 13 40000017	IF SYSCALL <= 23: <= 10: <= 6: == x32.lstat: ALLOW
l0351: 25 00 09 4000001f	IF SYSCALL <= 31: <= 27: == x32.mincore: ALLOW
l0352: 25 00 04 40000023	IF SYSCALL <= 35: == x32.nanosleep: ALLOW
l0353: 15 61 00 40000027	IF SYSCALL == x32.getpid: ALLOW
l0354: 15 60 00 40000026	IF SYSCALL == x32.setitimer: ALLOW
l0355: 15 5f 00 40000025	IF SYSCALL == x32.alarm: ALLOW
l0356: 15 5e 59 40000024	IF SYSCALL == x32.getitimer then ALLOW else ERRORNO(1)
l0357: 15 5d 00 40000023	IF SYSCALL == x32.nanosleep: ALLOW
l0358: 15 5c 00 40000022	IF SYSCALL == x32.pause: ALLOW
l0359: 15 5b 00 40000021	IF SYSCALL == x32.dup2: ALLOW
l0360: 15 5a 55 40000020	IF SYSCALL == x32.dup then ALLOW else ERRORNO(1)
l0361: 25 00 04 4000001b	IF SYSCALL <= 27: == x32.mincore: ALLOW
l0362: 15 58 00 4000001f	IF SYSCALL == x32.shmctl: ALLOW
l0363: 15 57 00 4000001e	IF SYSCALL == x32.shmat: ALLOW
l0364: 15 56 00 4000001d	IF SYSCALL == x32.shmget: ALLOW
l0365: 15 55 50 4000001c	IF SYSCALL == x32.madvise then ALLOW else ERRORNO(1)
l0366: 15 54 00 4000001b	IF SYSCALL == x32.mincore: ALLOW
l0367: 15 53 00 4000001a	IF SYSCALL == x32.msync: ALLOW
l0368: 15 52 00 40000019	IF SYSCALL == x32.mremap: ALLOW
l0369: 15 51 4c 40000018	IF SYSCALL == x32.sched_yield then ALLOW else ERRORNO(1)
l0370: 25 00 09 4000000a	IF SYSCALL <= 10: <= 6: == x32.lstat: ALLOW
l0371: 25 00 04 40000011	IF SYSCALL <= 17: == x32.pread64: ALLOW
l0372: 15 4e 00 40000017	IF SYSCALL == x32.select: ALLOW
l0373: 15 4d 00 40000016	IF SYSCALL == x32.pipe: ALLOW
l0374: 15 4c 00 40000015	IF SYSCALL == x32.access: ALLOW
l0375: 15 4b 46 40000012	IF SYSCALL == x32.pwrite64 then ALLOW else ERRORNO(1)
l0376: 15 4a 00 40000011	IF SYSCALL == x32.pread64: ALLOW
l0377: 15 49 00 4000000e	IF SYSCALL == x32.rt_sigprocmask: ALLOW
l0378: 15 48 00 4000000c	IF SYSCALL == x32.brk: ALLOW
l0379: 15 47 42 4000000b	IF SYSCALL == x32.munmap then ALLOW else ERRORNO(1)
l0380: 25 00 04 40000006	IF SYSCALL <= 6: == x32.lstat: ALLOW
l0381: 15 45 00 4000000a	IF SYSCALL == x32.mprotect: ALLOW
l0382: 15 44 00 40000009	IF SYSCALL == x32.mmap: ALLOW
l0383: 15 43 00 40000008	IF SYSCALL == x32.lseek: ALLOW
l0384: 15 42 3d 40000007	IF SYSCALL == x32.poll then ALLOW else ERRORNO(1)
l0385: 15 41 00 40000006	IF SYSCALL == x32.lstat: ALLOW
l0386: 15 40 00 40000005	IF SYSCALL == x32.fstat: ALLOW
l0387: 15 3f 00 40000004	IF SYSCALL == x32.stat: ALLOW
l0388: 15 3e 39 40000003	IF SYSCALL == x32.close then ALLOW else ERRORNO(1)
l0389: 25 00 14 0000014d	IF SYSCALL <= 333: <= 325: <= 318: == getrandom: ALLOW
l0390: 25 00 09 000001b9	IF SYSCALL <= 441: <= 435: != clone3: == pidfd_open: ALLOW(l0407)
l0391: 25 00 04 000001bf	IF SYSCALL <= 447: == memfd_secret: ALLOW
l0392: 15 3a 00 40000002	IF SYSCALL == x32.open: ALLOW
l0393: 15 39 00 40000001	IF SYSCALL == x32.write: ALLOW
l0394: 15 38 00 40000000	IF SYSCALL == x32.read: ALLOW
l0395: 15 37 32 000001c0	IF SYSCALL == process_mrelease then ALLOW else ERRORNO(1)
l0396: 15 36 00 000001bf	IF SYSCALL == memfd_secret: ALLOW
l0397: 15 35 00 000001be	IF SYSCALL == landlock_restrict_self: ALLOW
l0398: 15 34 00 000001bd	IF SYSCALL == landlock_add_rule: ALLOW
l0399: 15 33 2e 000001bc	IF SYSCALL == landlock_create_ruleset then ALLOW else ERRORNO(1)
l0400: 25 00 04 000001b3	IF SYSCALL <= 435: != clone3: == pidfd_open: ALLOW(l0407)
l0401: 15 31 00 000001b9	IF SYSCALL == epoll_pwait2: ALLOW
l0402: 15 30 00 000001b7	IF SYSCALL == faccessat2: ALLOW
l0403: 15 2f 00 000001b5	IF SYSCALL == openat2: ALLOW
l0404: 15 2e 29 000001b4	IF SYSCALL == close_range then ALLOW else ERRORNO(1)
l0405: 15 00 01 000001b3	IF SYSCALL != clone3: == pidfd_open: ALLOW(l0407)
l0406: 06 00 00 00050026	RETURN ERRORNO(38)
l0407: 15 2b 00 000001b2	IF SYSCALL == pidfd_open: ALLOW
l0408: 15 2a 00 000001a8	IF SYSCALL == pidfd_send_signal: ALLOW
l0409: 15 29 24 0000014e	IF SYSCALL == rseq then ALLOW else ERRORNO(1)
l0410: 25 00 09 00000145	IF SYSCALL <= 325: <= 318: == getrandom: ALLOW
l0411: 25 00 04 00000149	IF SYSCALL <= 329: == pkey_mprotect: ALLOW
l0412: 15 26 00 0000014d	IF SYSCALL == io_pgetevents: ALLOW
l0413: 15 25 00 0000014c	IF SYSCALL == statx: ALLOW
l0414: 15 24 00 0000014b	IF SYSCALL == pkey_free: ALLOW
l0415: 15 23 1e 0000014a	IF SYSCALL == pkey_alloc then ALLOW else ERRORNO(1)
l0416: 15 22 00 00000149	IF SYSCALL == pkey_mprotect: ALLOW
l0417: 15 21 00 00000148	IF SYSCALL == pwritev2: ALLOW
l0418: 15 20 00 00000147	IF SYSCALL == preadv2: ALLOW
l0419: 15 1f 1a 00000146	IF SYSCALL == copy_file_range then ALLOW else ERRORNO(1)
l0420: 25 00 04 0000013e	IF SYSCALL <= 318: == getrandom: ALLOW
l0421: 15 1d 00 00000145	IF SYSCALL == mlock2: ALLOW
l0422: 15 1c 00 00000144	IF SYSCALL == membarrier: ALLOW
l0423: 15 1b 00 00000142	IF SYSCALL == execveat: ALLOW
l0424: 15 1a 15 0000013f	IF SYSCALL == memfd_create then ALLOW else ERRORNO(1)
l0425: 15 19 00 0000013e	IF SYSCALL == getrandom: ALLOW
l0426: 15 18 00 0000013d	IF SYSCALL == seccomp: ALLOW
l0427: 15 17 00 0000013c	IF SYSCALL == renameat2: ALLOW
l0428: 15 16 11 0000013b	IF SYSCALL == sched_getattr then ALLOW else ERRORNO(1)
l0429: 25 00 29 00000113	IF SYSCALL <= 275: <= 258: <= 245: <= 241: == mq_unlink: ALLOW
l0430: 25 00 15 00000124	IF SYSCALL <= 292: <= 284: <= 280: == utimensat: ALLOW
l0431: 25 00 09 0000012e	IF SYSCALL <= 302: <= 296: == pwritev: ALLOW
l0432: 25 00 04 00000133	IF SYSCALL <= 307: == sendmmsg: ALLOW
l0433: 15 11 00 0000013a	IF SYSCALL == sched_setattr: ALLOW
l0434: 15 10 00 00000137	IF SYSCALL == process_vm_writev: ALLOW
l0435: 15 0f 00 00000136	IF SYSCALL == process_vm_readv: ALLOW
l0436: 15 0e 09 00000135	IF SYSCALL == getcpu then ALLOW else ERRORNO(1)
l0437: 15 0d 00 00000133	IF SYSCALL == sendmmsg: ALLOW
l0438: 15 0c 00 00000132	IF SYSCALL == syncfs: ALLOW
l0439: 15 0b 00 00000131	IF SYSCALL == clock_adjtime: ALLOW
l0440: 15 0a 05 0000012f	IF SYSCALL == name_to_handle_at then ALLOW else ERRORNO(1)
l0441: 25 00 05 00000128	IF SYSCALL <= 296: == pwritev: ALLOW
l0442: 15 08 00 0000012e	IF SYSCALL == prlimit64: ALLOW
l0443: 15 07 00 0000012d	IF SYSCALL == fanotify_mark: ALLOW
l0444: 15 06 00 0000012b	IF SYSCALL == recvmmsg: ALLOW
l0445: 15 05 00 00000129	IF SYSCALL == rt_tgsigqueueinfo: ALLOW
l0446: 06 00 00 00050001	RETURN ERRORNO(1)
l0447: 15 03 00 00000128	IF SYSCALL == pwritev: ALLOW
l0448: 15 02 00 00000127	IF SYSCALL == preadv: ALLOW
l0449: 15 01 00 00000126	IF SYSCALL == inotify_init1: ALLOW
l0450: 15 00 fd 00000125	IF SYSCALL != pipe2: ERRORNO(1)(l0704)
l0451: 06 00 00 7fff0000	RETURN ALLOW
l0452: 25 00 09 0000011c	IF SYSCALL <= 284: <= 280: == utimensat: ALLOW
l0453: 25 00 04 00000120	IF SYSCALL <= 288: == accept4: ALLOW
l0454: 15 fe 00 00000124	IF SYSCALL == dup3: ALLOW
l0455: 15 fd 00 00000123	IF SYSCALL == epoll_create1: ALLOW
l0456: 15 fc 00 00000122	IF SYSCALL == eventfd2: ALLOW
l0457: 15 fb f6 00000121	IF SYSCALL == signalfd4 then ALLOW else ERRORNO(1)
l0458: 15 fa 00 00000120	IF SYSCALL == accept4: ALLOW
l0459: 15 f9 00 0000011f	IF SYSCALL == timerfd_gettime: ALLOW
l0460: 15 f8 00 0000011e	IF SYSCALL == timerfd_settime: ALLOW
l0461: 15 f7 f2 0000011d	IF SYSCALL == fallocate then ALLOW else ERRORNO(1)
l0462: 25 00 04 00000118	IF SYSCALL <= 280: == utimensat: ALLOW
l0463: 15 f5 00 0000011c	IF SYSCALL == eventfd: ALLOW
l0464: 15 f4 00 0000011b	IF SYSCALL == timerfd_create: ALLOW
l0465: 15 f3 00 0000011a	IF SYSCALL == signalfd: ALLOW
l0466: 15 f2 ed 00000119	IF SYSCALL == epoll_pwait then ALLOW else ERRORNO(1)
l0467: 15 f1 00 00000118	IF SYSCALL == utimensat: ALLOW
l0468: 15 f0 00 00000116	IF SYSCALL == vmsplice: ALLOW
l0469: 15 ef 00 00000115	IF SYSCALL == sync_file_range: ALLOW
l0470: 15 ee e9 00000114	IF SYSCALL == tee then ALLOW else ERRORNO(1)
l0471: 25 00 13 00000102	IF SYSCALL <= 258: <= 245: <= 241: == mq_unlink: ALLOW
l0472: 25 00 09 0000010a	IF SYSCALL <= 266: <= 262: == newfstatat: ALLOW
l0473: 25 00 04 0000010e	IF SYSCALL <= 270: == pselect6: ALLOW
l0474: 15 ea 00 00000113	IF SYSCALL == splice: ALLOW
l0475: 15 e9 00 00000112	IF SYSCALL == get_robust_list: ALLOW
l0476: 15 e8 00 00000111	IF SYSCALL == set_robust_list: ALLOW
l0477: 15 e7 e2 0000010f	IF SYSCALL == ppoll then ALLOW else ERRORNO(1)
l0478: 15 e6 00 0000010e	IF SYSCALL == pselect6: ALLOW
l0479: 15 e5 00 0000010d	IF SYSCALL == faccessat: ALLOW
l0480: 15 e4 00 0000010c	IF SYSCALL == fchmodat: ALLOW
l0481: 15 e3 de 0000010b	IF SYSCALL == readlinkat then ALLOW else ERRORNO(1)
l0482: 25 00 04 00000106	IF SYSCALL <= 262: == newfstatat: ALLOW
l0483: 15 e1 00 0000010a	IF SYSCALL == symlinkat: ALLOW
l0484: 15 e0 00 00000109	IF SYSCALL == linkat: ALLOW
l0485: 15 df 00 00000108	IF SYSCALL == renameat: ALLOW
l0486: 15 de d9 00000107	IF SYSCALL == unlinkat then ALLOW else ERRORNO(1)
l0487: 15 dd 00 00000106	IF SYSCALL == newfstatat: ALLOW
l0488: 15 dc 00 00000105	IF SYSCALL == futimesat: ALLOW
l0489: 15 db 00 00000104	IF SYSCALL == fchownat: ALLOW
l0490: 15 da d5 00000103	IF SYSCALL == mknodat then ALLOW else ERRORNO(1)
l0491: 25 00 09 000000f5	IF SYSCALL <= 245: <= 241: == mq_unlink: ALLOW
l0492: 25 00 04 000000fd	IF SYSCALL <= 253: == inotify_init: ALLOW
l0493: 15 d7 00 00000102	IF SYSCALL == mkdirat: ALLOW
l0494: 15 d6 00 00000101	IF SYSCALL == openat: ALLOW
l0495: 15 d5 00 000000ff	IF SYSCALL == inotify_rm_watch: ALLOW
l0496: 15 d4 cf 000000fe	IF SYSCALL == inotify_add_watch then ALLOW else ERRORNO(1)
l0497: 15 d3 00 000000fd	IF SYSCALL == inotify_init: ALLOW
l0498: 15 d2 00 000000fc	IF SYSCALL == ioprio_get: ALLOW
l0499: 15 d1 00 000000fb	IF SYSCALL == ioprio_set: ALLOW
l0500: 15 d0 cb 000000f7	IF SYSCALL == waitid then ALLOW else ERRORNO(1)
l0501: 25 00 04 000000f1	IF SYSCALL <= 241: == mq_unlink: ALLOW
l0502: 15 ce 00 000000f5	IF SYSCALL == mq_getsetattr: ALLOW
l0503: 15 cd 00 000000f4	IF SYSCALL == mq_notify: ALLOW
l0504: 15 cc 00 000000f3	IF SYSCALL == mq_timedreceive: ALLOW
l0505: 15 cb c6 000000f2	IF SYSCALL == mq_timedsend then ALLOW else ERRORNO(1)
l0506: 15 ca 00 000000f1	IF SYSCALL == mq_unlink: ALLOW
l0507: 15 c9 00 000000f0	IF SYSCALL == mq_open: ALLOW
l0508: 15 c8 00 000000eb	IF SYSCALL == utimes: ALLOW
l0509: 15 c7 c2 000000ea	IF SYSCALL == tgkill then ALLOW else ERRORNO(1)
l0510: 25 00 4f 0000008d	IF SYSCALL <= 141: <= 106: <= 89: <= 81: <= 77: == ftruncate: ALLOW
l0511: 25 00 27 000000c7	IF SYSCALL <= 199: <= 160: <= 149: <= 145: == sched_getscheduler: ALLOW
l0512: 25 00 13 000000d8	IF SYSCALL <= 216: <= 207: <= 203: == sched_setaffinity: ALLOW
l0513: 25 00 09 000000e0	IF SYSCALL <= 224: <= 220: == semtimedop: ALLOW
l0514: 25 00 04 000000e5	IF SYSCALL <= 229: == clock_getres: ALLOW
l0515: 15 c1 00 000000e9	IF SYSCALL == epoll_ctl: ALLOW
l0516: 15 c0 00 000000e8	IF SYSCALL == epoll_wait: ALLOW
l0517: 15 bf 00 000000e7	IF SYSCALL == exit_group: ALLOW
l0518: 15 be b9 000000e6	IF SYSCALL == clock_nanosleep then ALLOW else ERRORNO(1)
l0519: 15 bd 00 000000e5	IF SYSCALL == clock_getres: ALLOW
l0520: 15 bc 00 000000e4	IF SYSCALL == clock_gettime: ALLOW
l0521: 15 bb 00 000000e2	IF SYSCALL == timer_delete: ALLOW
l0522: 15 ba b5 000000e1	IF SYSCALL == timer_getoverrun then ALLOW else ERRORNO(1)
l0523: 25 00 04 000000dc	IF SYSCALL <= 220: == semtimedop: ALLOW
l0524: 15 b8 00 000000e0	IF SYSCALL == timer_gettime: ALLOW
l0525: 15 b7 00 000000df	IF SYSCALL == timer_settime: ALLOW
l0526: 15 b6 00 000000de	IF SYSCALL == timer_create: ALLOW
l0527: 15 b5 b0 000000dd	IF SYSCALL == fadvise64 then ALLOW else ERRORNO(1)
l0528: 15 b4 00 000000dc	IF SYSCALL == semtimedop: ALLOW
l0529: 15 b3 00 000000db	IF SYSCALL == restart_syscall: ALLOW
l0530: 15 b2 00 000000da	IF SYSCALL == set_tid_address: ALLOW
l0531: 15 b1 ac 000000d9	IF SYSCALL == getdents64 then ALLOW else ERRORNO(1)
l0532: 25 00 09 000000cf	IF SYSCALL <= 207: <= 203: == sched_setaffinity: ALLOW
l0533: 25 00 04 000000d3	IF SYSCALL <= 211: == get_thread_area: ALLOW
l0534: 15 ae 00 000000d8	IF SYSCALL == remap_file_pages: ALLOW
l0535: 15 ad 00 000000d7	IF SYSCALL == epoll_wait_old: ALLOW
l0536: 15 ac 00 000000d6	IF SYSCALL == epoll_ctl_old: ALLOW
l0537: 15 ab a6 000000d5	IF SYSCALL == epoll_create then ALLOW else ERRORNO(1)
l0538: 15 aa 00 000000d3	IF SYSCALL == get_thread_area: ALLOW
l0539: 15 a9 00 000000d2	IF SYSCALL == io_cancel: ALLOW
l0540: 15 a8 00 000000d1	IF SYSCALL == io_submit: ALLOW
l0541: 15 a7 a2 000000d0	IF SYSCALL == io_getevents then ALLOW else ERRORNO(1)
l0542: 25 00 04 000000cb	IF SYSCALL <= 203: == sched_setaffinity: ALLOW
l0543: 15 a5 00 000000cf	IF SYSCALL == io_destroy: ALLOW
l0544: 15 a4 00 000000ce	IF SYSCALL == io_setup: ALLOW
l0545: 15 a3 00 000000cd	IF SYSCALL == set_thread_area: ALLOW
l0546: 15 a2 9d 000000cc	IF SYSCALL == sched_getaffinity then ALLOW else ERRORNO(1)
l0547: 15 a1 00 000000cb	IF SYSCALL == sched_setaffinity: ALLOW
l0548: 15 a0 00 000000ca	IF SYSCALL == futex: ALLOW
l0549: 15 9f 00 000000c9	IF SYSCALL == time: ALLOW
l0550: 15 9e 99 000000c8	IF SYSCALL == tkill then ALLOW else ERRORNO(1)
l0551: 25 00 13 000000a0	IF SYSCALL <= 160: <= 149: <= 145: == sched_getscheduler: ALLOW
l0552: 25 00 09 000000bf	IF SYSCALL <= 191: <= 187: == readahead: ALLOW
l0553: 25 00 04 000000c3	IF SYSCALL <= 195: == llistxattr: ALLOW
l0554: 15 9a 00 000000c7	IF SYSCALL == fremovexattr: ALLOW
l0555: 15 99 00 000000c6	IF SYSCALL == lremovexattr: ALLOW
l0556: 15 98 00 000000c5	IF SYSCALL == removexattr: ALLOW
l0557: 15 97 92 000000c4	IF SYSCALL == flistxattr then ALLOW else ERRORNO(1)
l0558: 15 96 00 000000c3	IF SYSCALL == llistxattr: ALLOW
l0559: 15 95 00 000000c2	IF SYSCALL == listxattr: ALLOW
l0560: 15 94 00 000000c1	IF SYSCALL == fgetxattr: ALLOW
l0561: 15 93 8e 000000c0	IF SYSCALL == lgetxattr then ALLOW else ERRORNO(1)
l0562: 25 00 04 000000bb	IF SYSCALL <= 187: == readahead: ALLOW
l0563: 15 91 00 000000bf	IF SYSCALL == getxattr: ALLOW
l0564: 15 90 00 000000be	IF SYSCALL == fsetxattr: ALLOW
l0565: 15 8f 00 000000bd	IF SYSCALL == lsetxattr: ALLOW
l0566: 15 8e 89 000000bc	IF SYSCALL == setxattr then ALLOW else ERRORNO(1)
l0567: 15 8d 00 000000bb	IF SYSCALL == readahead: ALLOW
l0568: 15 8c 00 000000ba	IF SYSCALL == gettid: ALLOW
l0569: 15 8b 00 000000a2	IF SYSCALL == sync: ALLOW
l0570: 15 8a 85 000000a1	IF SYSCALL == chroot then ALLOW else ERRORNO(1)
l0571: 25 00 09 00000095	IF SYSCALL <= 149: <= 145: == sched_getscheduler: ALLOW
l0572: 25 00 04 0000009a	IF SYSCALL <= 154: == modify_ldt: ALLOW
l0573: 15 87 00 000000a0	IF SYSCALL == setrlimit: ALLOW
l0574: 15 86 00 0000009f	IF SYSCALL == adjtimex: ALLOW
l0575: 15 85 00 0000009e	IF SYSCALL == arch_prctl: ALLOW
l0576: 15 84 7f 0000009d	IF SYSCALL == prctl then ALLOW else ERRORNO(1)
l0577: 15 83 00 0000009a	IF SYSCALL == modify_ldt: ALLOW
l0578: 15 82 00 00000098	IF SYSCALL == munlockall: ALLOW
l0579: 15 81 00 00000097	IF SYSCALL == mlockall: ALLOW
l0580: 15 80 7b 00000096	IF SYSCALL == munlock then ALLOW else ERRORNO(1)
l0581: 25 00 04 00000091	IF SYSCALL <= 145: == sched_getscheduler: ALLOW
l0582: 15 7e 00 00000095	IF SYSCALL == mlock: ALLOW
l0583: 15 7d 00 00000094	IF SYSCALL == sched_rr_get_interval: ALLOW
l0584: 15 7c 00 00000093	IF SYSCALL == sched_get_priority_min: ALLOW
l0585: 15 7b 76 00000092	IF SYSCALL == sched_get_priority_max then ALLOW else ERRORNO(1)
l0586: 15 7a 00 00000091	IF SYSCALL == sched_getscheduler: ALLOW
l0587: 15 79 00 00000090	IF SYSCALL == sched_setscheduler: ALLOW
l0588: 15 78 00 0000008f	IF SYSCALL == sched_getparam: ALLOW
l0589: 15 77 72 0000008e	IF SYSCALL == sched_setparam then ALLOW else ERRORNO(1)
l0590: 25 00 2a 0000006a	IF SYSCALL <= 106: <= 89: <= 81: <= 77: == ftruncate: ALLOW
l0591: 25 00 16 0000007a	IF SYSCALL <= 122: <= 114: <= 110: == getppid: ALLOW
l0592: 25 00 0c 00000082	IF SYSCALL <= 130: <= 126: == capset: ALLOW
l0593: 25 00 04 00000087	IF SYSCALL <= 135: != personality: == mknod: ALLOW(l0602)
l0594: 15 72 00 0000008d	IF SYSCALL == setpriority: ALLOW
l0595: 15 71 00 0000008c	IF SYSCALL == getpriority: ALLOW
l0596: 15 70 00 0000008a	IF SYSCALL == fstatfs: ALLOW
l0597: 15 6f 6a 00000089	IF SYSCALL == statfs then ALLOW else ERRORNO(1)
l0598: 15 00 03 00000087	IF SYSCALL != personality: == mknod: ALLOW(l0602)
l0599: 20 00 00 00000014	A = [20](personality ARGS[4])
l0600: 15 00 67 00000000	IF SYSCALL != read: ERRORNO(1)(l0704)
l0601: 05 00 00 000001fb	goto l1109
l0602: 15 6a 00 00000085	IF SYSCALL == mknod: ALLOW
l0603: 15 69 00 00000084	IF SYSCALL == utime: ALLOW
l0604: 15 68 63 00000083	IF SYSCALL == sigaltstack then ALLOW else ERRORNO(1)
l0605: 25 00 04 0000007e	IF SYSCALL <= 126: == capset: ALLOW
l0606: 15 66 00 00000082	IF SYSCALL == rt_sigsuspend: ALLOW
l0607: 15 65 00 00000081	IF SYSCALL == rt_sigqueueinfo: ALLOW
l0608: 15 64 00 00000080	IF SYSCALL == rt_sigtimedwait: ALLOW
l0609: 15 63 5e 0000007f	IF SYSCALL == rt_sigpending then ALLOW else ERRORNO(1)
l0610: 15 62 00 0000007e	IF SYSCALL == capset: ALLOW
l0611: 15 61 00 0000007d	IF SYSCALL == capget: ALLOW
l0612: 15 60 00 0000007c	IF SYSCALL == getsid: ALLOW
l0613: 15 5f 5a 0000007b	IF SYSCALL == setfsgid then ALLOW else ERRORNO(1)
l0614: 25 00 09 00000072	IF SYSCALL <= 114: <= 110: == getppid: ALLOW
l0615: 25 00 04 00000076	IF SYSCALL <= 118: == getresuid: ALLOW
l0616: 15 5c 00 0000007a	IF SYSCALL == setfsuid: ALLOW
l0617: 15 5b 00 00000079	IF SYSCALL == getpgid: ALLOW
l0618: 15 5a 00 00000078	IF SYSCALL == getresgid: ALLOW
l0619: 15 59 54 00000077	IF SYSCALL == setresgid then ALLOW else ERRORNO(1)
l0620: 15 58 00 00000076	IF SYSCALL == getresuid: ALLOW
l0621: 15 57 00 00000075	IF SYSCALL == setresuid: ALLOW
l0622: 15 56 00 00000074	IF SYSCALL == setgroups: ALLOW
l0623: 15 55 50 00000073	IF SYSCALL == getgroups then ALLOW else ERRORNO(1)
l0624: 25 00 04 0000006e	IF SYSCALL <= 110: == getppid: ALLOW
l0625: 15 53 00 00000072	IF SYSCALL == setregid: ALLOW
l0626: 15 52 00 00000071	IF SYSCALL == setreuid: ALLOW
l0627: 15 51 00 00000070	IF SYSCALL == setsid: ALLOW
l0628: 15 50 4b 0000006f	IF SYSCALL == getpgrp then ALLOW else ERRORNO(1)
l0629: 15 4f 00 0000006e	IF SYSCALL == getppid: ALLOW
l0630: 15 4e 00 0000006d	IF SYSCALL == setpgid: ALLOW
l0631: 15 4d 00 0000006c	IF SYSCALL == getegid: ALLOW
l0632: 15 4c 47 0000006b	IF SYSCALL == geteuid then ALLOW else ERRORNO(1)
l0633: 25 00 13 00000059	IF SYSCALL <= 89: <= 81: <= 77: == ftruncate: ALLOW
l0634: 25 00 09 00000061	IF SYSCALL <= 97: <= 93: == fchown: ALLOW
l0635: 25 00 04 00000065	IF SYSCALL <= 101: == ptrace: ALLOW
l0636: 15 48 00 0000006a	IF SYSCALL == setgid: ALLOW
l0637: 15 47 00 00000069	IF SYSCALL == setuid: ALLOW
l0638: 15 46 00 00000068	IF SYSCALL == getgid: ALLOW
l0639: 15 45 40 00000066	IF SYSCALL == getuid then ALLOW else ERRORNO(1)
l0640: 15 44 00 00000065	IF SYSCALL == ptrace: ALLOW
l0641: 15 43 00 00000064	IF SYSCALL == times: ALLOW
l0642: 15 42 00 00000063	IF SYSCALL == sysinfo: ALLOW
l0643: 15 41 3c 00000062	IF SYSCALL == getrusage then ALLOW else ERRORNO(1)
l0644: 25 00 04 0000005d	IF SYSCALL <= 93: == fchown: ALLOW
l0645: 15 3f 00 00000061	IF SYSCALL == getrlimit: ALLOW
l0646: 15 3e 00 00000060	IF SYSCALL == gettimeofday: ALLOW
l0647: 15 3d 00 0000005f	IF SYSCALL == umask: ALLOW
l0648: 15 3c 37 0000005e	IF SYSCALL == lchown then ALLOW else ERRORNO(1)
l0649: 15 3b 00 0000005d	IF SYSCALL == fchown: ALLOW
l0650: 15 3a 00 0000005c	IF SYSCALL == chown: ALLOW
l0651: 15 39 00 0000005b	IF SYSCALL == fchmod: ALLOW
l0652: 15 38 33 0000005a	IF SYSCALL == chmod then ALLOW else ERRORNO(1)
l0653: 25 00 09 00000051	IF SYSCALL <= 81: <= 77: == ftruncate: ALLOW
l0654: 25 00 04 00000055	IF SYSCALL <= 85: == creat: ALLOW
l0655: 15 35 00 00000059	IF SYSCALL == readlink: ALLOW
l0656: 15 34 00 00000058	IF SYSCALL == symlink: ALLOW
l0657: 15 33 00 00000057	IF SYSCALL == unlink: ALLOW
l0658: 15 32 2d 00000056	IF SYSCALL == link then ALLOW else ERRORNO(1)
l0659: 15 31 00 00000055	IF SYSCALL == creat: ALLOW
l0660: 15 30 00 00000054	IF SYSCALL == rmdir: ALLOW
l0661: 15 2f 00 00000053	IF SYSCALL == mkdir: ALLOW
l0662: 15 2e 29 00000052	IF SYSCALL == rename then ALLOW else ERRORNO(1)
l0663: 25 00 04 0000004d	IF SYSCALL <= 77: == ftruncate: ALLOW
l0664: 15 2c 00 00000051	IF SYSCALL == fchdir: ALLOW
l0665: 15 2b 00 00000050	IF SYSCALL == chdir: ALLOW
l0666: 15 2a 00 0000004f	IF SYSCALL == getcwd: ALLOW
l0667: 15 29 24 0000004e	IF SYSCALL == getdents then ALLOW else ERRORNO(1)
l0668: 15 28 00 0000004d	IF SYSCALL == ftruncate: ALLOW
l0669: 15 27 00 0000004c	IF SYSCALL == truncate: ALLOW
l0670: 15 26 00 0000004b	IF SYSCALL == fdatasync: ALLOW
l0671: 15 25 20 0000004a	IF SYSCALL == fsync then ALLOW else ERRORNO(1)
l0672: 25 00 57 00000009	IF SYSCALL <= 9: <= 1: == write: ALLOW
l0673: 25 00 2d 00000029	IF SYSCALL <= 41: <= 25: <= 17: <= 13: == rt_sigaction: ALLOW
l0674: 25 00 13 00000039	IF SYSCALL <= 57: <= 49: <= 45: == recvfrom: ALLOW
l0675: 25 00 09 00000041	IF SYSCALL <= 65: <= 61: == wait4: ALLOW
l0676: 25 00 04 00000045	IF SYSCALL <= 69: == msgsnd: ALLOW
l0677: 15 1f 00 00000049	IF SYSCALL == flock: ALLOW
l0678: 15 1e 00 00000048	IF SYSCALL == fcntl: ALLOW
l0679: 15 1d 00 00000047	IF SYSCALL == msgctl: ALLOW
l0680: 15 1c 17 00000046	IF SYSCALL == msgrcv then ALLOW else ERRORNO(1)
l0681: 15 1b 00 00000045	IF SYSCALL == msgsnd: ALLOW
l0682: 15 1a 00 00000044	IF SYSCALL == msgget: ALLOW
l0683: 15 19 00 00000043	IF SYSCALL == shmdt: ALLOW
l0684: 15 18 13 00000042	IF SYSCALL == semctl then ALLOW else ERRORNO(1)
l0685: 25 00 04 0000003d	IF SYSCALL <= 61: == wait4: ALLOW
l0686: 15 16 00 00000041	IF SYSCALL == semop: ALLOW
l0687: 15 15 00 00000040	IF SYSCALL == semget: ALLOW
l0688: 15 14 00 0000003f	IF SYSCALL == uname: ALLOW
l0689: 15 13 0e 0000003e	IF SYSCALL == kill then ALLOW else ERRORNO(1)
l0690: 15 12 00 0000003d	IF SYSCALL == wait4: ALLOW
l0691: 15 11 00 0000003c	IF SYSCALL == exit: ALLOW
l0692: 15 10 00 0000003b	IF SYSCALL == execve: ALLOW
l0693: 15 0f 0a 0000003a	IF SYSCALL == vfork then ALLOW else ERRORNO(1)
l0694: 25 00 0f 00000031	IF SYSCALL <= 49: <= 45: == recvfrom: ALLOW
l0695: 25 00 09 00000035	IF SYSCALL <= 53: == socketpair: ALLOW
l0696: 15 0c 00 00000039	IF SYSCALL == fork: ALLOW
l0697: 15 00 04 00000038	IF SYSCALL != clone: == getsockopt: ALLOW(l0702)
l0698: 20 00 00 00000014	A = [20](clone ARGS[4])
l0699: 54 00 00 00000000	and #0x0
l0700: 15 00 03 00000000	IF SYSCALL != read: ERRORNO(1)(l0704)
l0701: 05 00 00 000001a6	goto l1124
l0702: 15 06 00 00000037	IF SYSCALL == getsockopt: ALLOW
l0703: 15 05 00 00000036	IF SYSCALL == setsockopt: ALLOW
l0704: 06 00 00 00050001	RETURN ERRORNO(1)
l0705: 15 03 00 00000035	IF SYSCALL == socketpair: ALLOW
l0706: 15 02 00 00000034	IF SYSCALL == getpeername: ALLOW
l0707: 15 01 00 00000033	IF SYSCALL == getsockname: ALLOW
l0708: 15 00 fd 00000032	IF SYSCALL != listen: ERRORNO(1)(l0962)
l0709: 06 00 00 7fff0000	RETURN ALLOW
l0710: 25 00 04 0000002d	IF SYSCALL <= 45: == recvfrom: ALLOW
l0711: 15 ff 00 00000031	IF SYSCALL == bind: ALLOW
l0712: 15 fe 00 00000030	IF SYSCALL == shutdown: ALLOW
l0713: 15 fd 00 0000002f	IF SYSCALL == recvmsg: ALLOW
l0714: 15 fc f7 0000002e	IF SYSCALL == sendmsg then ALLOW else ERRORNO(1)
l0715: 15 fb 00 0000002d	IF SYSCALL == recvfrom: ALLOW
l0716: 15 fa 00 0000002c	IF SYSCALL == sendto: ALLOW
l0717: 15 f9 00 0000002b	IF SYSCALL == accept: ALLOW
l0718: 15 f8 f3 0000002a	IF SYSCALL == connect then ALLOW else ERRORNO(1)
l0719: 25 00 15 00000019	IF SYSCALL <= 25: <= 17: <= 13: == rt_sigaction: ALLOW
l0720: 25 00 0b 00000021	IF SYSCALL <= 33: <= 29: == shmget: ALLOW
l0721: 25 00 06 00000025	IF SYSCALL <= 37: == alarm: ALLOW
l0722: 15 00 02 00000029	IF SYSCALL != socket: == sendfile: ALLOW(l0725)
l0723: 20 00 00 00000014	A = [20](socket ARGS[4])
l0724: 15 8e f2 00000000	IF SYSCALL == read then l0867 else ALLOW
l0725: 15 f1 00 00000028	IF SYSCALL == sendfile: ALLOW
l0726: 15 f0 00 00000027	IF SYSCALL == getpid: ALLOW
l0727: 15 ef ea 00000026	IF SYSCALL == setitimer then ALLOW else ERRORNO(1)
l0728: 15 ee 00 00000025	IF SYSCALL == alarm: ALLOW
l0729: 15 ed 00 00000024	IF SYSCALL == getitimer: ALLOW
l0730: 15 ec 00 00000023	IF SYSCALL == nanosleep: ALLOW
l0731: 15 eb e6 00000022	IF SYSCALL == pause then ALLOW else ERRORNO(1)
l0732: 25 00 04 0000001d	IF SYSCALL <= 29: == shmget: ALLOW
l0733: 15 e9 00 00000021	IF SYSCALL == dup2: ALLOW
l0734: 15 e8 00 00000020	IF SYSCALL == dup: ALLOW
l0735: 15 e7 00 0000001f	IF SYSCALL == shmctl: ALLOW
l0736: 15 e6 e1 0000001e	IF SYSCALL == shmat then ALLOW else ERRORNO(1)
l0737: 15 e5 00 0000001d	IF SYSCALL == shmget: ALLOW
l0738: 15 e4 00 0000001c	IF SYSCALL == madvise: ALLOW
l0739: 15 e3 00 0000001b	IF SYSCALL == mincore: ALLOW
l0740: 15 e2 dd 0000001a	IF SYSCALL == msync then ALLOW else ERRORNO(1)
l0741: 25 00 09 00000011	IF SYSCALL <= 17: <= 13: == rt_sigaction: ALLOW
l0742: 25 00 04 00000015	IF SYSCALL <= 21: == access: ALLOW
l0743: 15 df 00 00000019	IF SYSCALL == mremap: ALLOW
l0744: 15 de 00 00000018	IF SYSCALL == sched_yield: ALLOW
l0745: 15 dd 00 00000017	IF SYSCALL == select: ALLOW
l0746: 15 dc d7 00000016	IF SYSCALL == pipe then ALLOW else ERRORNO(1)
l0747: 15 db 00 00000015	IF SYSCALL == access: ALLOW
l0748: 15 da 00 00000014	IF SYSCALL == writev: ALLOW
l0749: 15 d9 00 00000013	IF SYSCALL == readv: ALLOW
l0750: 15 d8 d3 00000012	IF SYSCALL == pwrite64 then ALLOW else ERRORNO(1)
l0751: 25 00 04 0000000d	IF SYSCALL <= 13: == rt_sigaction: ALLOW
l0752: 15 d6 00 00000011	IF SYSCALL == pread64: ALLOW
l0753: 15 d5 00 00000010	IF SYSCALL == ioctl: ALLOW
l0754: 15 d4 00 0000000f	IF SYSCALL == rt_sigreturn: ALLOW
l0755: 15 d3 ce 0000000e	IF SYSCALL == rt_sigprocmask then ALLOW else ERRORNO(1)
l0756: 15 d2 00 0000000d	IF SYSCALL == rt_sigaction: ALLOW
l0757: 15 d1 00 0000000c	IF SYSCALL == brk: ALLOW
l0758: 15 d0 00 0000000b	IF SYSCALL == munmap: ALLOW
l0759: 15 cf ca 0000000a	IF SYSCALL == mprotect then ALLOW else ERRORNO(1)
l0760: 25 00 09 00000001	IF SYSCALL <= 1: == write: ALLOW
l0761: 25 00 04 00000005	IF SYSCALL <= 5: == fstat: ALLOW
l0762: 15 cc 00 00000009	IF SYSCALL == mmap: ALLOW
l0763: 15 cb 00 00000008	IF SYSCALL == lseek: ALLOW
l0764: 15 ca 00 00000007	IF SYSCALL == poll: ALLOW
l0765: 15 c9 c4 00000006	IF SYSCALL == lstat then ALLOW else ERRORNO(1)
l0766: 15 c8 00 00000005	IF SYSCALL == fstat: ALLOW
l0767: 15 c7 00 00000004	IF SYSCALL == stat: ALLOW
l0768: 15 c6 00 00000003	IF SYSCALL == close: ALLOW
l0769: 15 c5 c0 00000002	IF SYSCALL == open then ALLOW else ERRORNO(1)
l0770: 15 c4 00 00000001	IF SYSCALL == write: ALLOW
l0771: 15 c3 be 00000000	IF SYSCALL == read then ALLOW else ERRORNO(1)
l0772: 15 01 00 40000003	IF SYSCALL == I386: 774
l0773: 06 00 00 00000000	RETURN KILL
l0774: 20 00 00 00000000	A = [0](SYSCALL)
l0775: 25 01 00 0000008b	IF SYSCALL > 0x008b: 777
l0776: 05 00 00 00000144	goto l1101
l0777: 25 00 a2 0000011c	IF SYSCALL <= 284: <= 209: <= 175: <= 156: <= 147: <= 143: == I386.sched_getparam: ALLOW
l0778: 25 00 50 0000016a	IF SYSCALL <= 362: <= 323: <= 305: <= 297: <= 292: == I386.dup3: ALLOW
l0779: 25 00 28 00000191	IF SYSCALL <= 401: <= 379: <= 370: <= 366: == I386.0x16e: ALLOW
l0780: 25 00 14 000001a3	IF SYSCALL <= 419: <= 410: <= 406: == I386.0x196: ALLOW
l0781: 25 00 09 000001b4	IF SYSCALL <= 436: <= 423: == I386.0x1a7: ALLOW
l0782: 25 00 04 000001bc	IF SYSCALL <= 444: == I386.landlock_create_ruleset: ALLOW
l0783: 15 b7 00 000001c0	IF SYSCALL == I386.process_mrelease: ALLOW
l0784: 15 b6 00 000001bf	IF SYSCALL == I386.memfd_secret: ALLOW
l0785: 15 b5 00 000001be	IF SYSCALL == I386.landlock_restrict_self: ALLOW
l0786: 15 b4 af 000001bd	IF SYSCALL == I386.landlock_add_rule then ALLOW else ERRORNO(1)
l0787: 15 b3 00 000001bc	IF SYSCALL == I386.landlock_create_ruleset: ALLOW
l0788: 15 b2 00 000001b9	IF SYSCALL == I386.epoll_pwait2: ALLOW
l0789: 15 b1 00 000001b7	IF SYSCALL == I386.faccessat2: ALLOW
l0790: 15 b0 ab 000001b5	IF SYSCALL == I386.openat2 then ALLOW else ERRORNO(1)
l0791: 25 00 05 000001a7	IF SYSCALL <= 423: == I386.0x1a7: ALLOW
l0792: 15 ae 00 000001b4	IF SYSCALL == I386.close_range: ALLOW
l0793: 15 00 01 000001b3	IF SYSCALL != I386.clone3: == I386.pidfd_open: ALLOW(l0795)
l0794: 06 00 00 00050026	RETURN ERRORNO(38)
l0795: 15 ab 00 000001b2	IF SYSCALL == I386.pidfd_open: ALLOW
l0796: 15 aa a5 000001a8	IF SYSCALL == I386.pidfd_send_signal then ALLOW else ERRORNO(1)
l0797: 15 a9 00 000001a7	IF SYSCALL == I386.0x1a7: ALLOW
l0798: 15 a8 00 000001a6	IF SYSCALL == I386.0x1a6: ALLOW
l0799: 15 a7 00 000001a5	IF SYSCALL == I386.0x1a5: ALLOW
l0800: 15 a6 a1 000001a4	IF SYSCALL == I386.0x1a4 then ALLOW else ERRORNO(1)
l0801: 25 00 09 0000019a	IF SYSCALL <= 410: <= 406: == I386.0x196: ALLOW
l0802: 25 00 04 0000019e	IF SYSCALL <= 414: == I386.0x19e: ALLOW
l0803: 15 a3 00 000001a3	IF SYSCALL == I386.0x1a3: ALLOW
l0804: 15 a2 00 000001a2	IF SYSCALL == I386.0x1a2: ALLOW
l0805: 15 a1 00 000001a1	IF SYSCALL == I386.0x1a1: ALLOW
l0806: 15 a0 9b 000001a0	IF SYSCALL == I386.0x1a0 then ALLOW else ERRORNO(1)
l0807: 15 9f 00 0000019e	IF SYSCALL == I386.0x19e: ALLOW
l0808: 15 9e 00 0000019d	IF SYSCALL == I386.0x19d: ALLOW
l0809: 15 9d 00 0000019c	IF SYSCALL == I386.0x19c: ALLOW
l0810: 15 9c 97 0000019b	IF SYSCALL == I386.0x19b then ALLOW else ERRORNO(1)
l0811: 25 00 04 00000196	IF SYSCALL <= 406: == I386.0x196: ALLOW
l0812: 15 9a 00 0000019a	IF SYSCALL == I386.0x19a: ALLOW
l0813: 15 99 00 00000199	IF SYSCALL == I386.0x199: ALLOW
l0814: 15 98 00 00000198	IF SYSCALL == I386.0x198: ALLOW
l0815: 15 97 92 00000197	IF SYSCALL == I386.0x197 then ALLOW else ERRORNO(1)
l0816: 15 96 00 00000196	IF SYSCALL == I386.0x196: ALLOW
l0817: 15 95 00 00000195	IF SYSCALL == I386.0x195: ALLOW
l0818: 15 94 00 00000193	IF SYSCALL == I386.0x193: ALLOW
l0819: 15 93 8e 00000192	IF SYSCALL == I386.0x192 then ALLOW else ERRORNO(1)
l0820: 25 00 13 0000017b	IF SYSCALL <= 379: <= 370: <= 366: == I386.0x16e: ALLOW
l0821: 25 00 09 00000189	IF SYSCALL <= 393: <= 383: == I386.0x17f: ALLOW
l0822: 25 00 04 0000018d	IF SYSCALL <= 397: == I386.0x18d: ALLOW
l0823: 15 8f 00 00000191	IF SYSCALL == I386.0x191: ALLOW
l0824: 15 8e 00 00000190	IF SYSCALL == I386.0x190: ALLOW
l0825: 15 8d 00 0000018f	IF SYSCALL == I386.0x18f: ALLOW
l0826: 15 8c 87 0000018e	IF SYSCALL == I386.0x18e then ALLOW else ERRORNO(1)
l0827: 15 8b 00 0000018d	IF SYSCALL == I386.0x18d: ALLOW
l0828: 15 8a 00 0000018c	IF SYSCALL == I386.0x18c: ALLOW
l0829: 15 89 00 0000018b	IF SYSCALL == I386.0x18b: ALLOW
l0830: 15 88 83 0000018a	IF SYSCALL == I386.0x18a then ALLOW else ERRORNO(1)
l0831: 25 00 04 0000017f	IF SYSCALL <= 383: == I386.0x17f: ALLOW
l0832: 15 86 00 00000189	IF SYSCALL == I386.0x189: ALLOW
l0833: 15 85 00 00000182	IF SYSCALL == I386.0x182: ALLOW
l0834: 15 84 00 00000181	IF SYSCALL == I386.0x181: ALLOW
l0835: 15 83 7e 00000180	IF SYSCALL == I386.0x180 then ALLOW else ERRORNO(1)
l0836: 15 82 00 0000017f	IF SYSCALL == I386.0x17f: ALLOW
l0837: 15 81 00 0000017e	IF SYSCALL == I386.0x17e: ALLOW
l0838: 15 80 00 0000017d	IF SYSCALL == I386.0x17d: ALLOW
l0839: 15 7f 7a 0000017c	IF SYSCALL == I386.0x17c then ALLOW else ERRORNO(1)
l0840: 25 00 09 00000172	IF SYSCALL <= 370: <= 366: == I386.0x16e: ALLOW
l0841: 25 00 04 00000177	IF SYSCALL <= 375: == I386.0x177: ALLOW
l0842: 15 7c 00 0000017b	IF SYSCALL == I386.0x17b: ALLOW
l0843: 15 7b 00 0000017a	IF SYSCALL == I386.0x17a: ALLOW
l0844: 15 7a 00 00000179	IF SYSCALL == I386.0x179: ALLOW
l0845: 15 79 74 00000178	IF SYSCALL == I386.0x178 then ALLOW else ERRORNO(1)
l0846: 15 78 00 00000177	IF SYSCALL == I386.0x177: ALLOW
l0847: 15 77 00 00000175	IF SYSCALL == I386.0x175: ALLOW
l0848: 15 76 00 00000174	IF SYSCALL == I386.0x174: ALLOW
l0849: 15 75 70 00000173	IF SYSCALL == I386.0x173 then ALLOW else ERRORNO(1)
l0850: 25 00 04 0000016e	IF SYSCALL <= 366: == I386.0x16e: ALLOW
l0851: 15 73 00 00000172	IF SYSCALL == I386.0x172: ALLOW
l0852: 15 72 00 00000171	IF SYSCALL == I386.0x171: ALLOW
l0853: 15 71 00 00000170	IF SYSCALL == I386.0x170: ALLOW
l0854: 15 70 6b 0000016f	IF SYSCALL == I386.0x16f then ALLOW else ERRORNO(1)
l0855: 15 6f 00 0000016e	IF SYSCALL == I386.0x16e: ALLOW
l0856: 15 6e 00 0000016d	IF SYSCALL == I386.0x16d: ALLOW
l0857: 15 6d 00 0000016c	IF SYSCALL == I386.0x16c: ALLOW
l0858: 15 6c 67 0000016b	IF SYSCALL == I386.0x16b then ALLOW else ERRORNO(1)
l0859: 25 00 29 00000143	IF SYSCALL <= 323: <= 305: <= 297: <= 292: == I386.dup3: ALLOW
l0860: 25 00 15 00000155	IF SYSCALL <= 341: <= 331: <= 327: == I386.preadv2: ALLOW
l0861: 25 00 0b 00000161	IF SYSCALL <= 353: <= 347: == I386.0x15b: ALLOW
l0862: 25 00 06 00000166	IF SYSCALL <= 358: == I386.0x166: ALLOW
l0863: 15 67 00 0000016a	IF SYSCALL == I386.0x16a: ALLOW
l0864: 15 66 00 00000169	IF SYSCALL == I386.0x169: ALLOW
l0865: 15 65 00 00000168	IF SYSCALL == I386.0x168: ALLOW
l0866: 15 00 5f 00000167	IF SYSCALL != I386.0x167: ERRORNO(1)(l0962)
l0867: 20 00 00 00000010	A = [16](I386.0x167 ARGS[0])
l0868: 15 5d 62 00000028	IF SYSCALL == I386.sendfile then ERRORNO(1) else ALLOW
l0869: 15 61 00 00000166	IF SYSCALL == I386.0x166: ALLOW
l0870: 15 60 00 00000164	IF SYSCALL == I386.0x164: ALLOW
l0871: 15 5f 00 00000163	IF SYSCALL == I386.0x163: ALLOW
l0872: 15 5e 59 00000162	IF SYSCALL == I386.0x162 then ALLOW else ERRORNO(1)
l0873: 25 00 04 0000015b	IF SYSCALL <= 347: == I386.0x15b: ALLOW
l0874: 15 5c 00 00000161	IF SYSCALL == I386.0x161: ALLOW
l0875: 15 5b 00 00000160	IF SYSCALL == I386.0x160: ALLOW
l0876: 15 5a 00 0000015f	IF SYSCALL == I386.0x15f: ALLOW
l0877: 15 59 54 0000015c	IF SYSCALL == I386.0x15c then ALLOW else ERRORNO(1)
l0878: 15 58 00 0000015b	IF SYSCALL == I386.0x15b: ALLOW
l0879: 15 57 00 00000159	IF SYSCALL == I386.0x159: ALLOW
l0880: 15 56 00 00000158	IF SYSCALL == I386.0x158: ALLOW
l0881: 15 55 50 00000157	IF SYSCALL == I386.0x157 then ALLOW else ERRORNO(1)
l0882: 25 00 09 0000014b	IF SYSCALL <= 331: <= 327: == I386.preadv2: ALLOW
l0883: 25 00 04 0000014f	IF SYSCALL <= 335: == I386.0x14f: ALLOW
l0884: 15 52 00 00000155	IF SYSCALL == I386.0x155: ALLOW
l0885: 15 51 00 00000154	IF SYSCALL == I386.0x154: ALLOW
l0886: 15 50 00 00000153	IF SYSCALL == I386.0x153: ALLOW
l0887: 15 4f 4a 00000151	IF SYSCALL == I386.0x151 then ALLOW else ERRORNO(1)
l0888: 15 4e 00 0000014f	IF SYSCALL == I386.0x14f: ALLOW
l0889: 15 4d 00 0000014e	IF SYSCALL == I386.rseq: ALLOW
l0890: 15 4c 00 0000014d	IF SYSCALL == I386.io_pgetevents: ALLOW
l0891: 15 4b 46 0000014c	IF SYSCALL == I386.statx then ALLOW else ERRORNO(1)
l0892: 25 00 04 00000147	IF SYSCALL <= 327: == I386.preadv2: ALLOW
l0893: 15 49 00 0000014b	IF SYSCALL == I386.pkey_free: ALLOW
l0894: 15 48 00 0000014a	IF SYSCALL == I386.pkey_alloc: ALLOW
l0895: 15 47 00 00000149	IF SYSCALL == I386.pkey_mprotect: ALLOW
l0896: 15 46 41 00000148	IF SYSCALL == I386.pwritev2 then ALLOW else ERRORNO(1)
l0897: 15 45 00 00000147	IF SYSCALL == I386.preadv2: ALLOW
l0898: 15 44 00 00000146	IF SYSCALL == I386.copy_file_range: ALLOW
l0899: 15 43 00 00000145	IF SYSCALL == I386.mlock2: ALLOW
l0900: 15 42 3d 00000144	IF SYSCALL == I386.membarrier then ALLOW else ERRORNO(1)
l0901: 25 00 13 00000131	IF SYSCALL <= 305: <= 297: <= 292: == I386.dup3: ALLOW
l0902: 25 00 09 0000013a	IF SYSCALL <= 314: <= 309: == I386.getcpu: ALLOW
l0903: 25 00 04 0000013f	IF SYSCALL <= 319: == I386.memfd_create: ALLOW
l0904: 15 3e 00 00000143	IF SYSCALL == I386.userfaultfd: ALLOW
l0905: 15 3d 00 00000142	IF SYSCALL == I386.execveat: ALLOW
l0906: 15 3c 00 00000141	IF SYSCALL == I386.bpf: ALLOW
l0907: 15 3b 36 00000140	IF SYSCALL == I386.kexec_file_load then ALLOW else ERRORNO(1)
l0908: 15 3a 00 0000013f	IF SYSCALL == I386.memfd_create: ALLOW
l0909: 15 39 00 0000013e	IF SYSCALL == I386.getrandom: ALLOW
l0910: 15 38 00 0000013c	IF SYSCALL == I386.renameat2: ALLOW
l0911: 15 37 32 0000013b	IF SYSCALL == I386.sched_getattr then ALLOW else ERRORNO(1)
l0912: 25 00 04 00000135	IF SYSCALL <= 309: == I386.getcpu: ALLOW
l0913: 15 35 00 0000013a	IF SYSCALL == I386.sched_setattr: ALLOW
l0914: 15 34 00 00000139	IF SYSCALL == I386.finit_module: ALLOW
l0915: 15 33 00 00000138	IF SYSCALL == I386.kcmp: ALLOW
l0916: 15 32 2d 00000137	IF SYSCALL == I386.process_vm_writev then ALLOW else ERRORNO(1)
l0917: 15 31 00 00000135	IF SYSCALL == I386.getcpu: ALLOW
l0918: 15 30 00 00000134	IF SYSCALL == I386.setns: ALLOW
l0919: 15 2f 00 00000133	IF SYSCALL == I386.sendmmsg: ALLOW
l0920: 15 2e 29 00000132	IF SYSCALL == I386.syncfs then ALLOW else ERRORNO(1)
l0921: 25 00 09 00000129	IF SYSCALL <= 297: <= 292: == I386.dup3: ALLOW
l0922: 25 00 04 0000012d	IF SYSCALL <= 301: == I386.fanotify_mark: ALLOW
l0923: 15 2b 00 00000131	IF SYSCALL == I386.clock_adjtime: ALLOW
l0924: 15 2a 00 00000130	IF SYSCALL == I386.open_by_handle_at: ALLOW
l0925: 15 29 00 0000012f	IF SYSCALL == I386.name_to_handle_at: ALLOW
l0926: 15 28 23 0000012e	IF SYSCALL == I386.prlimit64 then ALLOW else ERRORNO(1)
l0927: 15 27 00 0000012d	IF SYSCALL == I386.fanotify_mark: ALLOW
l0928: 15 26 00 0000012c	IF SYSCALL == I386.fanotify_init: ALLOW
l0929: 15 25 00 0000012b	IF SYSCALL == I386.recvmmsg: ALLOW
l0930: 15 24 1f 0000012a	IF SYSCALL == I386.perf_event_open then ALLOW else ERRORNO(1)
l0931: 25 00 04 00000124	IF SYSCALL <= 292: == I386.dup3: ALLOW
l0932: 15 22 00 00000129	IF SYSCALL == I386.rt_tgsigqueueinfo: ALLOW
l0933: 15 21 00 00000128	IF SYSCALL == I386.pwritev: ALLOW
l0934: 15 20 00 00000127	IF SYSCALL == I386.preadv: ALLOW
l0935: 15 1f 1a 00000125	IF SYSCALL == I386.pipe2 then ALLOW else ERRORNO(1)
l0936: 15 1e 00 00000124	IF SYSCALL == I386.dup3: ALLOW
l0937: 15 1d 00 00000123	IF SYSCALL == I386.epoll_create1: ALLOW
l0938: 15 1c 00 00000122	IF SYSCALL == I386.eventfd2: ALLOW
l0939: 15 1b 16 00000121	IF SYSCALL == I386.signalfd4 then ALLOW else ERRORNO(1)
l0940: 25 00 51 000000d1	IF SYSCALL <= 209: <= 175: <= 156: <= 147: <= 143: == I386.sched_getparam: ALLOW
l0941: 25 00 29 000000f4	IF SYSCALL <= 244: <= 228: <= 218: <= 213: == I386.epoll_create: ALLOW
l0942: 25 00 14 00000106	IF SYSCALL <= 262: <= 254: <= 248: == I386.add_key: ALLOW
l0943: 25 00 09 0000010f	IF SYSCALL <= 271: <= 267: == I386.readlinkat: ALLOW
l0944: 25 00 04 00000117	IF SYSCALL <= 279: == I386.move_pages: ALLOW
l0945: 15 15 00 0000011c	IF SYSCALL == I386.eventfd: ALLOW
l0946: 15 14 00 0000011a	IF SYSCALL == I386.signalfd: ALLOW
l0947: 15 13 00 00000119	IF SYSCALL == I386.epoll_pwait: ALLOW
l0948: 15 12 0d 00000118	IF SYSCALL == I386.utimensat then ALLOW else ERRORNO(1)
l0949: 15 11 00 00000117	IF SYSCALL == I386.move_pages: ALLOW
l0950: 15 10 00 00000116	IF SYSCALL == I386.vmsplice: ALLOW
l0951: 15 0f 00 00000115	IF SYSCALL == I386.sync_file_range: ALLOW
l0952: 15 0e 09 00000110	IF SYSCALL == I386.unshare then ALLOW else ERRORNO(1)
l0953: 25 00 04 0000010b	IF SYSCALL <= 267: == I386.readlinkat: ALLOW
l0954: 15 0c 00 0000010f	IF SYSCALL == I386.ppoll: ALLOW
l0955: 15 0b 00 0000010e	IF SYSCALL == I386.pselect6: ALLOW
l0956: 15 0a 00 0000010d	IF SYSCALL == I386.faccessat: ALLOW
l0957: 15 09 04 0000010c	IF SYSCALL == I386.fchmodat then ALLOW else ERRORNO(1)
l0958: 15 08 00 0000010b	IF SYSCALL == I386.readlinkat: ALLOW
l0959: 15 07 00 0000010a	IF SYSCALL == I386.symlinkat: ALLOW
l0960: 15 06 00 00000109	IF SYSCALL == I386.linkat: ALLOW
l0961: 15 05 00 00000107	IF SYSCALL == I386.unlinkat: ALLOW
l0962: 06 00 00 00050001	RETURN ERRORNO(1)
l0963: 25 00 0a 000000fe	IF SYSCALL <= 254: <= 248: == I386.add_key: ALLOW
l0964: 25 00 05 00000102	IF SYSCALL <= 258: == I386.mkdirat: ALLOW
l0965: 15 01 00 00000106	IF SYSCALL == I386.newfstatat: ALLOW
l0966: 15 00 01 00000105	IF SYSCALL != I386.futimesat: == I386.fchownat: ALLOW(l0968)
l0967: 06 00 00 7fff0000	RETURN ALLOW
l0968: 15 ff 00 00000104	IF SYSCALL == I386.fchownat: ALLOW
l0969: 15 fe fd 00000103	IF SYSCALL == I386.mknodat then ALLOW else ERRORNO(1)
l0970: 15 fd 00 00000102	IF SYSCALL == I386.mkdirat: ALLOW
l0971: 15 fc 00 00000101	IF SYSCALL == I386.openat: ALLOW
l0972: 15 fb 00 00000100	IF SYSCALL == I386.migrate_pages: ALLOW
l0973: 15 fa f9 000000ff	IF SYSCALL == I386.inotify_rm_watch then ALLOW else ERRORNO(1)
l0974: 25 00 04 000000f8	IF SYSCALL <= 248: == I386.add_key: ALLOW
l0975: 15 f8 00 000000fe	IF SYSCALL == I386.inotify_add_watch: ALLOW
l0976: 15 f7 00 000000fc	IF SYSCALL == I386.ioprio_get: ALLOW
l0977: 15 f6 00 000000fa	IF SYSCALL == I386.keyctl: ALLOW
l0978: 15 f5 f4 000000f9	IF SYSCALL == I386.request_key then ALLOW else ERRORNO(1)
l0979: 15 f4 00 000000f8	IF SYSCALL == I386.add_key: ALLOW
l0980: 15 f3 00 000000f7	IF SYSCALL == I386.waitid: ALLOW
l0981: 15 f2 00 000000f6	IF SYSCALL == I386.kexec_load: ALLOW
l0982: 15 f1 f0 000000f5	IF SYSCALL == I386.mq_getsetattr then ALLOW else ERRORNO(1)
l0983: 25 00 13 000000e4	IF SYSCALL <= 228: <= 218: <= 213: == I386.epoll_create: ALLOW
l0984: 25 00 09 000000ec	IF SYSCALL <= 236: <= 232: == I386.epoll_wait: ALLOW
l0985: 25 00 04 000000f0	IF SYSCALL <= 240: == I386.mq_open: ALLOW
l0986: 15 ed 00 000000f4	IF SYSCALL == I386.mq_notify: ALLOW
l0987: 15 ec 00 000000f3	IF SYSCALL == I386.mq_timedreceive: ALLOW
l0988: 15 eb 00 000000f2	IF SYSCALL == I386.mq_timedsend: ALLOW
l0989: 15 ea e9 000000f1	IF SYSCALL == I386.mq_unlink then ALLOW else ERRORNO(1)
l0990: 15 e9 00 000000f0	IF SYSCALL == I386.mq_open: ALLOW
l0991: 15 e8 00 000000ef	IF SYSCALL == I386.get_mempolicy: ALLOW
l0992: 15 e7 00 000000ee	IF SYSCALL == I386.set_mempolicy: ALLOW
l0993: 15 e6 e5 000000ed	IF SYSCALL == I386.mbind then ALLOW else ERRORNO(1)
l0994: 25 00 04 000000e8	IF SYSCALL <= 232: == I386.epoll_wait: ALLOW
l0995: 15 e4 00 000000ec	IF SYSCALL == I386.vserver: ALLOW
l0996: 15 e3 00 000000eb	IF SYSCALL == I386.utimes: ALLOW
l0997: 15 e2 00 000000ea	IF SYSCALL == I386.tgkill: ALLOW
l0998: 15 e1 e0 000000e9	IF SYSCALL == I386.epoll_ctl then ALLOW else ERRORNO(1)
l0999: 15 e0 00 000000e8	IF SYSCALL == I386.epoll_wait: ALLOW
l1000: 15 df 00 000000e7	IF SYSCALL == I386.exit_group: ALLOW
l1001: 15 de 00 000000e6	IF SYSCALL == I386.clock_nanosleep: ALLOW
l1002: 15 dd dc 000000e5	IF SYSCALL == I386.clock_getres then ALLOW else ERRORNO(1)
l1003: 25 00 09 000000da	IF SYSCALL <= 218: <= 213: == I386.epoll_create: ALLOW
l1004: 25 00 04 000000e0	IF SYSCALL <= 224: == I386.timer_gettime: ALLOW
l1005: 15 da 00 000000e4	IF SYSCALL == I386.clock_gettime: ALLOW
l1006: 15 d9 00 000000e3	IF SYSCALL == I386.clock_settime: ALLOW
l1007: 15 d8 00 000000e2	IF SYSCALL == I386.timer_delete: ALLOW
l1008: 15 d7 d6 000000e1	IF SYSCALL == I386.timer_getoverrun then ALLOW else ERRORNO(1)
l1009: 15 d6 00 000000e0	IF SYSCALL == I386.timer_gettime: ALLOW
l1010: 15 d5 00 000000dd	IF SYSCALL == I386.fadvise64: ALLOW
l1011: 15 d4 00 000000dc	IF SYSCALL == I386.semtimedop: ALLOW
l1012: 15 d3 d2 000000db	IF SYSCALL == I386.restart_syscall then ALLOW else ERRORNO(1)
l1013: 25 00 04 000000d5	IF SYSCALL <= 213: == I386.epoll_create: ALLOW
l1014: 15 d1 00 000000da	IF SYSCALL == I386.set_tid_address: ALLOW
l1015: 15 d0 00 000000d8	IF SYSCALL == I386.remap_file_pages: ALLOW
l1016: 15 cf 00 000000d7	IF SYSCALL == I386.epoll_wait_old: ALLOW
l1017: 15 ce cd 000000d6	IF SYSCALL == I386.epoll_ctl_old then ALLOW else ERRORNO(1)
l1018: 15 cd 00 000000d5	IF SYSCALL == I386.epoll_create: ALLOW
l1019: 15 cc 00 000000d4	IF SYSCALL == I386.lookup_dcookie: ALLOW
l1020: 15 cb 00 000000d3	IF SYSCALL == I386.get_thread_area: ALLOW
l1021: 15 ca c9 000000d2	IF SYSCALL == I386.io_cancel then ALLOW else ERRORNO(1)
l1022: 25 00 27 000000af	IF SYSCALL <= 175: <= 156: <= 147: <= 143: == I386.sched_getparam: ALLOW
l1023: 25 00 13 000000c1	IF SYSCALL <= 193: <= 183: <= 179: == I386.quotactl: ALLOW
l1024: 25 00 09 000000c9	IF SYSCALL <= 201: <= 197: == I386.removexattr: ALLOW
l1025: 25 00 04 000000cd	IF SYSCALL <= 205: == I386.set_thread_area: ALLOW
l1026: 15 c5 00 000000d1	IF SYSCALL == I386.io_submit: ALLOW
l1027: 15 c4 00 000000d0	IF SYSCALL == I386.io_getevents: ALLOW
l1028: 15 c3 00 000000cf	IF SYSCALL == I386.io_destroy: ALLOW
l1029: 15 c2 c1 000000ce	IF SYSCALL == I386.io_setup then ALLOW else ERRORNO(1)
l1030: 15 c1 00 000000cd	IF SYSCALL == I386.set_thread_area: ALLOW
l1031: 15 c0 00 000000cc	IF SYSCALL == I386.sched_getaffinity: ALLOW
l1032: 15 bf 00 000000cb	IF SYSCALL == I386.sched_setaffinity: ALLOW
l1033: 15 be bd 000000ca	IF SYSCALL == I386.futex then ALLOW else ERRORNO(1)
l1034: 25 00 04 000000c5	IF SYSCALL <= 197: == I386.removexattr: ALLOW
l1035: 15 bc 00 000000c9	IF SYSCALL == I386.time: ALLOW
l1036: 15 bb 00 000000c8	IF SYSCALL == I386.tkill: ALLOW
l1037: 15 ba 00 000000c7	IF SYSCALL == I386.fremovexattr: ALLOW
l1038: 15 b9 b8 000000c6	IF SYSCALL == I386.lremovexattr then ALLOW else ERRORNO(1)
l1039: 15 b8 00 000000c5	IF SYSCALL == I386.removexattr: ALLOW
l1040: 15 b7 00 000000c4	IF SYSCALL == I386.flistxattr: ALLOW
l1041: 15 b6 00 000000c3	IF SYSCALL == I386.llistxattr: ALLOW
l1042: 15 b5 b4 000000c2	IF SYSCALL == I386.listxattr then ALLOW else ERRORNO(1)
l1043: 25 00 09 000000b7	IF SYSCALL <= 183: <= 179: == I386.quotactl: ALLOW
l1044: 25 00 04 000000bb	IF SYSCALL <= 187: == I386.readahead: ALLOW
l1045: 15 b2 00 000000c1	IF SYSCALL == I386.fgetxattr: ALLOW
l1046: 15 b1 00 000000c0	IF SYSCALL == I386.lgetxattr: ALLOW
l1047: 15 b0 00 000000bf	IF SYSCALL == I386.getxattr: ALLOW
l1048: 15 af ae 000000be	IF SYSCALL == I386.fsetxattr then ALLOW else ERRORNO(1)
l1049: 15 ae 00 000000bb	IF SYSCALL == I386.readahead: ALLOW
l1050: 15 ad 00 000000ba	IF SYSCALL == I386.gettid: ALLOW
l1051: 15 ac 00 000000b9	IF SYSCALL == I386.security: ALLOW
l1052: 15 ab aa 000000b8	IF SYSCALL == I386.tuxcall then ALLOW else ERRORNO(1)
l1053: 25 00 04 000000b3	IF SYSCALL <= 179: == I386.quotactl: ALLOW
l1054: 15 a9 00 000000b7	IF SYSCALL == I386.afs_syscall: ALLOW
l1055: 15 a8 00 000000b6	IF SYSCALL == I386.putpmsg: ALLOW
l1056: 15 a7 00 000000b5	IF SYSCALL == I386.getpmsg: ALLOW
l1057: 15 a6 a5 000000b4	IF SYSCALL == I386.nfsservctl then ALLOW else ERRORNO(1)
l1058: 15 a5 00 000000b3	IF SYSCALL == I386.quotactl: ALLOW
l1059: 15 a4 00 000000b2	IF SYSCALL == I386.query_module: ALLOW
l1060: 15 a3 00 000000b1	IF SYSCALL == I386.get_kernel_syms: ALLOW
l1061: 15 a2 a1 000000b0	IF SYSCALL == I386.delete_module then ALLOW else ERRORNO(1)
l1062: 25 00 13 0000009c	IF SYSCALL <= 156: <= 147: <= 143: == I386.sched_getparam: ALLOW
l1063: 25 00 09 000000a4	IF SYSCALL <= 164: <= 160: == I386.setrlimit: ALLOW
l1064: 25 00 04 000000ab	IF SYSCALL <= 171: == I386.setdomainname: ALLOW
l1065: 15 9e 00 000000af	IF SYSCALL == I386.init_module: ALLOW
l1066: 15 9d 00 000000ae	IF SYSCALL == I386.create_module: ALLOW
l1067: 15 9c 00 000000ad	IF SYSCALL == I386.ioperm: ALLOW
l1068: 15 9b 9a 000000ac	IF SYSCALL == I386.iopl then ALLOW else ERRORNO(1)
l1069: 15 9a 00 000000ab	IF SYSCALL == I386.setdomainname: ALLOW
l1070: 15 99 00 000000aa	IF SYSCALL == I386.sethostname: ALLOW
l1071: 15 98 00 000000a8	IF SYSCALL == I386.swapoff: ALLOW
l1072: 15 97 96 000000a5	IF SYSCALL == I386.mount then ALLOW else ERRORNO(1)
l1073: 25 00 04 000000a0	IF SYSCALL <= 160: == I386.setrlimit: ALLOW
l1074: 15 95 00 000000a4	IF SYSCALL == I386.settimeofday: ALLOW
l1075: 15 94 00 000000a3	IF SYSCALL == I386.acct: ALLOW
l1076: 15 93 00 000000a2	IF SYSCALL == I386.sync: ALLOW
l1077: 15 92 91 000000a1	IF SYSCALL == I386.chroot then ALLOW else ERRORNO(1)
l1078: 15 91 00 000000a0	IF SYSCALL == I386.setrlimit: ALLOW
l1079: 15 90 00 0000009f	IF SYSCALL == I386.adjtimex: ALLOW
l1080: 15 8f 00 0000009e	IF SYSCALL == I386.arch_prctl: ALLOW
l1081: 15 8e 8d 0000009d	IF SYSCALL == I386.prctl then ALLOW else ERRORNO(1)
l1082: 25 00 09 00000093	IF SYSCALL <= 147: <= 143: == I386.sched_getparam: ALLOW
l1083: 25 00 04 00000098	IF SYSCALL <= 152: == I386.munlockall: ALLOW
l1084: 15 8b 00 0000009c	IF SYSCALL == I386._sysctl: ALLOW
l1085: 15 8a 00 0000009b	IF SYSCALL == I386.pivot_root: ALLOW
l1086: 15 89 00 0000009a	IF SYSCALL == I386.modify_ldt: ALLOW
l1087: 15 88 87 00000099	IF SYSCALL == I386.vhangup then ALLOW else ERRORNO(1)
l1088: 15 87 00 00000098	IF SYSCALL == I386.munlockall: ALLOW
l1089: 15 86 00 00000097	IF SYSCALL == I386.mlockall: ALLOW
l1090: 15 85 00 00000096	IF SYSCALL == I386.munlock: ALLOW
l1091: 15 84 83 00000094	IF SYSCALL == I386.sched_rr_get_interval then ALLOW else ERRORNO(1)
l1092: 25 00 04 0000008f	IF SYSCALL <= 143: == I386.sched_getparam: ALLOW
l1093: 15 82 00 00000093	IF SYSCALL == I386.sched_get_priority_min: ALLOW
l1094: 15 81 00 00000092	IF SYSCALL == I386.sched_get_priority_max: ALLOW
l1095: 15 80 00 00000091	IF SYSCALL == I386.sched_getscheduler: ALLOW
l1096: 15 7f 7e 00000090	IF SYSCALL == I386.sched_setscheduler then ALLOW else ERRORNO(1)
l1097: 15 7e 00 0000008f	IF SYSCALL == I386.sched_getparam: ALLOW
l1098: 15 7d 00 0000008e	IF SYSCALL == I386.sched_setparam: ALLOW
l1099: 15 7c 00 0000008d	IF SYSCALL == I386.setpriority: ALLOW
l1100: 15 7b 7a 0000008c	IF SYSCALL == I386.getpriority then ALLOW else ERRORNO(1)
l1101: 25 00 58 00000024	IF SYSCALL <= 36: <= 10: <= 2: == I386.open: ALLOW
l1102: 25 00 30 00000055	IF SYSCALL <= 85: <= 60: <= 45: <= 40: == I386.sendfile: ALLOW
l1103: 25 00 1c 0000006c	IF SYSCALL <= 108: <= 97: <= 93: == I386.fchown: ALLOW
l1104: 25 00 0f 0000007b	IF SYSCALL <= 123: <= 118: == I386.getresuid: ALLOW
l1105: 25 00 0a 00000084	IF SYSCALL <= 132: == I386.utime: ALLOW
l1106: 15 75 00 0000008b	IF SYSCALL == I386.sysfs: ALLOW
l1107: 15 74 00 0000008a	IF SYSCALL == I386.fstatfs: ALLOW
l1108: 15 00 06 00000088	IF SYSCALL != I386.ustat: == I386.mknod then ALLOW else ERRORNO(1)(l1115)
l1109: 20 00 00 00000010	A = [16](I386.ustat ARGS[0])
l1110: 15 71 00 ffffffff	IF SYSCALL == I386.0xffffffff: ALLOW
l1111: 15 70 00 00020008	IF SYSCALL == I386.2lseek: ALLOW
l1112: 15 6f 00 00020000	IF SYSCALL == I386.2read: ALLOW
l1113: 15 6e 00 00000008	IF SYSCALL == I386.lseek: ALLOW
l1114: 15 6d 6c 00000000	IF SYSCALL == I386.read then ALLOW else ERRORNO(1)
l1115: 15 6c 6b 00000085	IF SYSCALL == I386.mknod then ALLOW else ERRORNO(1)
l1116: 15 6b 00 00000084	IF SYSCALL == I386.utime: ALLOW
l1117: 15 6a 00 0000007e	IF SYSCALL == I386.capset: ALLOW
l1118: 15 69 00 0000007d	IF SYSCALL == I386.capget: ALLOW
l1119: 15 68 67 0000007c	IF SYSCALL == I386.getsid then ALLOW else ERRORNO(1)
l1120: 25 00 07 00000076	IF SYSCALL <= 118: == I386.getresuid: ALLOW
l1121: 15 66 00 0000007b	IF SYSCALL == I386.setfsgid: ALLOW
l1122: 15 65 00 0000007a	IF SYSCALL == I386.setfsuid: ALLOW
l1123: 15 00 03 00000078	IF SYSCALL != I386.getresgid: == I386.setresgid then ALLOW else ERRORNO(1)(l1127)
l1124: 20 00 00 00000010	A = [16](I386.getresgid ARGS[0])
l1125: 54 00 00 7e020000	and #0x7e020000
l1126: 15 61 60 00000000	IF SYSCALL == I386.read then ALLOW else ERRORNO(1)
l1127: 15 60 5f 00000077	IF SYSCALL == I386.setresgid then ALLOW else ERRORNO(1)
l1128: 15 5f 00 00000076	IF SYSCALL == I386.getresuid: ALLOW
l1129: 15 5e 00 00000075	IF SYSCALL == I386.setresuid: ALLOW
l1130: 15 5d 00 00000074	IF SYSCALL == I386.setgroups: ALLOW
l1131: 15 5c 5b 00000072	IF SYSCALL == I386.setregid then ALLOW else ERRORNO(1)
l1132: 25 00 09 00000061	IF SYSCALL <= 97: <= 93: == I386.fchown: ALLOW
l1133: 25 00 04 00000068	IF SYSCALL <= 104: == I386.getgid: ALLOW
l1134: 15 59 00 0000006c	IF SYSCALL == I386.getegid: ALLOW
l1135: 15 58 00 0000006b	IF SYSCALL == I386.geteuid: ALLOW
l1136: 15 57 00 0000006a	IF SYSCALL == I386.setgid: ALLOW
l1137: 15 56 55 00000069	IF SYSCALL == I386.setuid then ALLOW else ERRORNO(1)
l1138: 15 55 00 00000068	IF SYSCALL == I386.getgid: ALLOW
l1139: 15 54 00 00000066	IF SYSCALL == I386.getuid: ALLOW
l1140: 15 53 00 00000064	IF SYSCALL == I386.times: ALLOW
l1141: 15 52 51 00000063	IF SYSCALL == I386.sysinfo then ALLOW else ERRORNO(1)
l1142: 25 00 04 0000005d	IF SYSCALL <= 93: == I386.fchown: ALLOW
l1143: 15 50 00 00000061	IF SYSCALL == I386.getrlimit: ALLOW
l1144: 15 4f 00 00000060	IF SYSCALL == I386.gettimeofday: ALLOW
l1145: 15 4e 00 0000005f	IF SYSCALL == I386.umask: ALLOW
l1146: 15 4d 4c 0000005e	IF SYSCALL == I386.lchown then ALLOW else ERRORNO(1)
l1147: 15 4c 00 0000005d	IF SYSCALL == I386.fchown: ALLOW
l1148: 15 4b 00 0000005c	IF SYSCALL == I386.chown: ALLOW
l1149: 15 4a 00 0000005b	IF SYSCALL == I386.fchmod: ALLOW
l1150: 15 49 48 0000005a	IF SYSCALL == I386.chmod then ALLOW else ERRORNO(1)
l1151: 25 00 13 0000003c	IF SYSCALL <= 60: <= 45: <= 40: == I386.sendfile: ALLOW
l1152: 25 00 09 0000004b	IF SYSCALL <= 75: <= 65: == I386.semop: ALLOW
l1153: 25 00 04 00000050	IF SYSCALL <= 80: == I386.chdir: ALLOW
l1154: 15 45 00 00000055	IF SYSCALL == I386.creat: ALLOW
l1155: 15 44 00 00000053	IF SYSCALL == I386.mkdir: ALLOW
l1156: 15 43 00 00000052	IF SYSCALL == I386.rename: ALLOW
l1157: 15 42 41 00000051	IF SYSCALL == I386.fchdir then ALLOW else ERRORNO(1)
l1158: 15 41 00 00000050	IF SYSCALL == I386.chdir: ALLOW
l1159: 15 40 00 0000004e	IF SYSCALL == I386.getdents: ALLOW
l1160: 15 3f 00 0000004d	IF SYSCALL == I386.ftruncate: ALLOW
l1161: 15 3e 3d 0000004c	IF SYSCALL == I386.truncate then ALLOW else ERRORNO(1)
l1162: 25 00 04 00000041	IF SYSCALL <= 65: == I386.semop: ALLOW
l1163: 15 3c 00 0000004b	IF SYSCALL == I386.fdatasync: ALLOW
l1164: 15 3b 00 00000047	IF SYSCALL == I386.msgctl: ALLOW
l1165: 15 3a 00 00000046	IF SYSCALL == I386.msgrcv: ALLOW
l1166: 15 39 38 00000042	IF SYSCALL == I386.semctl then ALLOW else ERRORNO(1)
l1167: 15 38 00 00000041	IF SYSCALL == I386.semop: ALLOW
l1168: 15 37 00 00000040	IF SYSCALL == I386.semget: ALLOW
l1169: 15 36 00 0000003f	IF SYSCALL == I386.uname: ALLOW
l1170: 15 35 34 0000003d	IF SYSCALL == I386.wait4 then ALLOW else ERRORNO(1)
l1171: 25 00 09 0000002d	IF SYSCALL <= 45: <= 40: == I386.sendfile: ALLOW
l1172: 25 00 04 00000032	IF SYSCALL <= 50: == I386.listen: ALLOW
l1173: 15 32 00 0000003c	IF SYSCALL == I386.exit: ALLOW
l1174: 15 31 00 00000039	IF SYSCALL == I386.fork: ALLOW
l1175: 15 30 00 00000037	IF SYSCALL == I386.getsockopt: ALLOW
l1176: 15 2f 2e 00000036	IF SYSCALL == I386.setsockopt then ALLOW else ERRORNO(1)
l1177: 15 2e 00 00000032	IF SYSCALL == I386.listen: ALLOW
l1178: 15 2d 00 00000031	IF SYSCALL == I386.bind: ALLOW
l1179: 15 2c 00 0000002f	IF SYSCALL == I386.recvmsg: ALLOW
l1180: 15 2b 2a 0000002e	IF SYSCALL == I386.sendmsg then ALLOW else ERRORNO(1)
l1181: 25 00 04 00000028	IF SYSCALL <= 40: == I386.sendfile: ALLOW
l1182: 15 29 00 0000002d	IF SYSCALL == I386.recvfrom: ALLOW
l1183: 15 28 00 0000002b	IF SYSCALL == I386.accept: ALLOW
l1184: 15 27 00 0000002a	IF SYSCALL == I386.connect: ALLOW
l1185: 15 26 25 00000029	IF SYSCALL == I386.socket then ALLOW else ERRORNO(1)
l1186: 15 25 00 00000028	IF SYSCALL == I386.sendfile: ALLOW
l1187: 15 24 00 00000027	IF SYSCALL == I386.getpid: ALLOW
l1188: 15 23 00 00000026	IF SYSCALL == I386.setitimer: ALLOW
l1189: 15 22 21 00000025	IF SYSCALL == I386.alarm then ALLOW else ERRORNO(1)
l1190: 25 00 13 0000000a	IF SYSCALL <= 10: <= 2: == I386.open: ALLOW
l1191: 25 00 09 00000014	IF SYSCALL <= 20: <= 14: == I386.rt_sigprocmask: ALLOW
l1192: 25 00 04 0000001b	IF SYSCALL <= 27: == I386.mincore: ALLOW
l1193: 15 1e 00 00000024	IF SYSCALL == I386.getitimer: ALLOW
l1194: 15 1d 00 00000021	IF SYSCALL == I386.dup2: ALLOW
l1195: 15 1c 00 0000001e	IF SYSCALL == I386.shmat: ALLOW
l1196: 15 1b 1a 0000001d	IF SYSCALL == I386.shmget then ALLOW else ERRORNO(1)
l1197: 15 1a 00 0000001b	IF SYSCALL == I386.mincore: ALLOW
l1198: 15 19 00 0000001a	IF SYSCALL == I386.msync: ALLOW
l1199: 15 18 00 00000018	IF SYSCALL == I386.sched_yield: ALLOW
l1200: 15 17 16 00000017	IF SYSCALL == I386.select then ALLOW else ERRORNO(1)
l1201: 25 00 04 0000000e	IF SYSCALL <= 14: == I386.rt_sigprocmask: ALLOW
l1202: 15 15 00 00000014	IF SYSCALL == I386.writev: ALLOW
l1203: 15 14 00 00000013	IF SYSCALL == I386.readv: ALLOW
l1204: 15 13 00 00000010	IF SYSCALL == I386.ioctl: ALLOW
l1205: 15 12 11 0000000f	IF SYSCALL == I386.rt_sigreturn then ALLOW else ERRORNO(1)
l1206: 15 11 00 0000000e	IF SYSCALL == I386.rt_sigprocmask: ALLOW
l1207: 15 10 00 0000000d	IF SYSCALL == I386.rt_sigaction: ALLOW
l1208: 15 0f 00 0000000c	IF SYSCALL == I386.brk: ALLOW
l1209: 15 0e 0d 0000000b	IF SYSCALL == I386.munmap then ALLOW else ERRORNO(1)
l1210: 25 00 09 00000002	IF SYSCALL <= 2: == I386.open: ALLOW
l1211: 25 00 04 00000006	IF SYSCALL <= 6: == I386.lstat: ALLOW
l1212: 15 0b 00 0000000a	IF SYSCALL == I386.mprotect: ALLOW
l1213: 15 0a 00 00000009	IF SYSCALL == I386.mmap: ALLOW
l1214: 15 09 00 00000008	IF SYSCALL == I386.lseek: ALLOW
l1215: 15 08 07 00000007	IF SYSCALL == I386.poll then ALLOW else ERRORNO(1)
l1216: 15 07 00 00000006	IF SYSCALL == I386.lstat: ALLOW
l1217: 15 06 00 00000005	IF SYSCALL == I386.fstat: ALLOW
l1218: 15 05 00 00000004	IF SYSCALL == I386.stat: ALLOW
l1219: 15 04 03 00000003	IF SYSCALL == I386.close then ALLOW else ERRORNO(1)
l1220: 15 03 00 00000002	IF SYSCALL == I386.open: ALLOW
l1221: 15 02 00 00000001	IF SYSCALL == I386.write: ALLOW
l1222: 15 01 00 00000000	IF SYSCALL == I386.read: ALLOW
l1223: 06 00 00 00050001	RETURN ERRORNO(1)
l1224: 06 00 00 7fff0000	RETURN ALLOW
l1225: 06 00 00 00000000	RETURN KILL
